{"version":3,"sources":["components/firebase.js","components/contexts/authContext.jsx","components/hooks/useLocalStorage.jsx","components/login/updateProfile.jsx","components/contexts/instructions.jsx","components/contexts/blockContext.jsx","components/Dashboards/trackProduct.jsx","components/Dashboards/addProduct.jsx","components/Dashboards/about.jsx","components/Dashboards/manuDash.jsx","components/Dashboards/buyerDash.jsx","components/Dashboards/Scan.jsx","components/Dashboards/retailerDash.jsx","components/PrivateRoute.jsx","components/login/register.jsx","components/login/login.jsx","components/App.jsx","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebase","initializeApp","auth","database","authContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","userName","role","id","address","a","ref","set","username","waddress","update","caddress","remove","child","get","then","snapshot","name","exists","val","useEffect","onAuthStateChanged","user","value","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","signOut","writeData","updatemail","updateEmail","updatePass","pass","updatePassword","updateRoleInBase","updateUserInBase","updateAddressInBase","addressToName","Provider","useLocalStorage","key","initialValue","testValue","localStorage","getItem","console","log","JSON","parse","Function","getSavedValue","setValue","setItem","stringify","validationSchema","yup","min","passwordConfirmation","oneOf","Alert","props","elevation","variant","Roles","useStyles","makeStyles","theme","root","margin","spacing","borderColor","Color","select","color","label","notchedOutline","borderWidth","input","button","backgroundColor","justifySelf","marginTop","marginleft","divide","background","UpdateProfile","style","setUserRole","isPass","setisPass","isUser","setisUser","isAddr","setisAddr","isEmail","setisEmail","isRole","setisRole","err","setErr","open","setOpen","openErr","setOpenErr","CUserName","setCUserName","CAddr","setCAddr","Crole","setCrole","promises","formik","useFormik","initialValues","Username","onSubmit","values","push","Role","uid","window","location","reload","Promise","all","catch","error","message","dbRef","handleClose","event","reason","handleSubmit","justifyContent","display","Paper","padding","right","alignItems","maxWidth","maxHeight","float","Snackbar","autoHideDuration","onClose","severity","Grid","container","justify","Typography","fontSize","items","xs","Divider","className","marginBottom","item","TextField","type","size","textField","InputLabelProps","InputProps","classes","onChange","handleChange","varient","class","onClick","prev","paddingLeft","touched","Boolean","errors","helperText","wordWrap","fullWidth","map","index","MenuItem","direction","Button","Instructions","position","top","left","bottom","height","width","justiftyContent","transform","gap","blockContext","useBlock","BlockProvider","account","setAccount","supplyChain","setsupplyChain","isMetamask","setIsMetamask","setWeb3","ethereum","web3","Web3","enable","currentProvider","alert","eth","getAccounts","accounts","net","getId","networkId","networkData","supply","networks","Contract","abi","transactionConfirmationBlocks","gasPrice","chain","loadWeb3","loadBlockChainData","on","off","addProduct","methods","send","from","productCount","call","updateLocation","changeLocation","trackProduct","fetchInfo","fetchOwner","fetchAddress","fetchLocations","fetchAllLocation","fontWeight","border","Transition","forwardRef","Slide","FetchLocation","LocDisp","orientation","Dialog","TransitionComponent","keepMounted","aria-labelledby","aria-describedby","PaperProps","DialogTitle","DialogContent","locations","DialogActions","TrackProduct","setId","setName","date","setDate","cLoc","setCLoc","owner","setOwner","setLocations","qrRef","useRef","current","openImageDialog","handleFetchInfo","dataRaw","Address","Locations","data","split","ownerRaw","temp","Date","dat","getDate","month","getMonth","year","getFullYear","Container","placeholder","disableUnderline","inputProps","e","target","borderLeft","cursor","marginLeft","delay","onScan","result","onError","legacyMode","Box","borderRadius","boxShadow","row","TabPanel","other","hidden","a11yProps","flexGrow","tabs","borderRight","palette","divider","VerticalTabs","locat","setLocat","setAddress","pc","check","uloc","setsOpen","addPro","handleClickOpen","Tabs","newValue","aria-label","Tab","paddingTop","required","paddingBottom","GenQR","DialogContentText","flexDirection","href","image","download","src","alt","AddProduct","sopen","imageUrl","setImageUrl","setPc","prod","toNumber","QRCode","toDataURL","toString","dark","light","scale","response","About","dividers","gutterBottom","autoFocus","ManuDash","icon","setIcon","Bdr","setBdr","history","useHistory","handlelogout","Navbar","expand","overflow","borderBottom","sticky","Brand","Toggle","Collapse","Nav","Link","NavDropdown","title","Item","component","fluid","path","BuyerDash","Scan","Width","RetDash","PrivateRoute","rest","roleRoute","userRole","fetchRole","render","to","useStyle","Register","MarginTop","align","underline","Login","App","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7dc0135c.chunk.js","sourcesContent":["import firebase from \"firebase/app\"\r\nimport \"firebase/auth\"\r\nimport \"firebase/database\"\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n  }; \r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n  export const auth = firebase.auth()\r\n  export default firebaseConfig;\r\n\r\n  export const database = firebase.database()","import React, {useContext, useEffect, useState } from 'react';\r\nimport {auth} from \"../firebase\";\r\nimport {database} from \"../firebase\";\r\nconst authContext = React.createContext();\r\n\r\n\r\nexport function useAuth(){\r\n    return useContext(authContext)\r\n}\r\nexport function AuthProvider({children}) {\r\n\r\n    const [currentUser,setCurrentUser] = useState();\r\n   const [loading,setLoading] = useState(true);\r\n\r\n    function signup( email,password){\r\n        return auth.createUserWithEmailAndPassword(email,password);\r\n    }\r\n\r\n    function login( email,password){\r\n        return auth.signInWithEmailAndPassword(email,password);\r\n    }\r\n\r\n    function logout() {\r\n        return auth.signOut()\r\n    }\r\n\r\n    async function writeData(userName , role, id,address) {\r\n\r\n        await database.ref(\"owners/\" + address).set({\r\n            username:userName\r\n        })\r\n        return database.ref( \"users/\" + id).set({\r\n            username: userName,\r\n            role: role,\r\n            waddress: address\r\n        })\r\n    }\r\n\r\n    function updateRoleInBase(role , id) {\r\n        return database.ref(\"users/\" + id).update({\r\n            role:role,\r\n        })\r\n    }\r\n\r\n    async function updateUserInBase(userName, id ,address) {\r\n\r\n    await database.ref( \"owners/\" + address).set({\r\n            username:userName\r\n        }) \r\n        return database.ref(\"users/\" + id).update({\r\n            username:userName\r\n        })\r\n    }\r\n\r\n    async function updateAddressInBase(userName ,caddress ,address ,id) {\r\n\r\n        await database.ref(\"owners/\" + caddress).remove()\r\n        if(userName){\r\n        await database.ref(\"owners/\" + address).set({\r\n            username: userName\r\n        }) \r\n    }\r\n        return database.ref(\"users/\" + id).update({\r\n           waddress:address\r\n        }) \r\n\r\n    }\r\n\r\n    async function addressToName(address){\r\n        let name\r\n        await database.ref(\"owners/\" + address).child(\"username\").get().then(snapshot =>{\r\n            if(snapshot.exists()){\r\n            name = snapshot.val()}\r\n        else {\r\n            name = address\r\n        }})\r\n        return name\r\n    }\r\n    function updatemail(email) {\r\n        return currentUser.updateEmail(email)\r\n   }\r\n   function updatePass(pass) {\r\n\r\n       return currentUser.updatePassword(pass)\r\n   }\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged( user => {\r\n            setCurrentUser(user)\r\n            setLoading(false)\r\n        } )\r\n        return unsubscribe\r\n    },[])\r\n\r\n    const value = {\r\n        currentUser,\r\n        signup,\r\n        login,\r\n        logout,\r\n        writeData,\r\n        updatemail,\r\n        updatePass,\r\n        updateRoleInBase,\r\n        updateUserInBase,\r\n        updateAddressInBase,\r\n        addressToName,\r\n    }\r\n    return(<authContext.Provider value = {value}>\r\n        {loading?<span>Loading...</span>:children}\r\n    </authContext.Provider>)\r\n}","import {useEffect,useState} from \"react\";\r\n\r\n\r\nfunction getSavedValue(key, initialValue){\r\n    const testValue = localStorage.getItem(key)?localStorage.getItem(key):\"null\"\r\n    console.log(testValue)\r\n    const savedValue = JSON.parse(testValue)\r\n    if(savedValue) return savedValue\r\n\r\n    if( initialValue instanceof Function) return initialValue()\r\n\r\n    return initialValue\r\n}\r\n\r\nexport function useLocalStorage(key , initialValue){\r\n\r\n    const [value,setValue] = useState(() =>{\r\n        return getSavedValue(key,initialValue)\r\n    })\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(key,JSON.stringify(value))\r\n    },[value])\r\n\r\n    return [value,setValue]\r\n}","/*colors scheme #05386B #379683 #5cdb95 #8ee4af #EDF5E1 */\r\n\r\nimport React, {useState } from \"react\"\r\nimport { useAuth} from \"../contexts/authContext\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {database} from \"../firebase\";\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { useLocalStorage} from \"../hooks/useLocalStorage\"\r\nimport {\r\n  Typography,\r\n  Paper,\r\n  Grid,\r\n  Button,\r\n  MenuItem,\r\n  TextField,\r\n  Divider,\r\n  Snackbar,\r\n} from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nconst validationSchema = yup.object({\r\n\r\n    email: yup\r\n      .string('Enter your email')\r\n      .email('Enter a valid email'),\r\n    password: yup\r\n      .string('Enter your password')\r\n      .min(8, 'Password should be of minimum 8 characters length'),\r\n    passwordConfirmation: yup.string()\r\n      .oneOf([yup.ref('password'), null], 'Passwords must match')\r\n  });\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\nconst Roles = [\r\n    \"manufacturer\",\r\n    \"exporter\",\r\n    \"importer\",\r\n    \"distributer\",\r\n    \"retailer\",\r\n    \"buyer\"\r\n]\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n          margin: theme.spacing(1),\r\n          borderColor: \"#5cdb95 !important\",\r\n          Color: \"#EDF5E1 !important\"\r\n        }},\r\n    select: {\r\n        color:\"#EDF5E1 !important\"\r\n    },\r\n    label : {\r\n        color: \"#EDF5E1 !important\"\r\n    },\r\n    notchedOutline: {\r\n        borderWidth: \"2px\",\r\n        borderColor: \"#5cdb95 !important\",\r\n        color:\"#EDF5E1 !important\"\r\n\r\n      },\r\n      input: {\r\n        color:\"#EDF5E1 !important\"\r\n      },\r\n\r\n      button: {\r\n          backgroundColor: \"#5cdb95\",\r\n          color: \"#05386B\",\r\n          justifySelf:\"center\",\r\n          marginTop: \"20px\",\r\n          marginleft: \"100px\",\r\n          \"&:hover\" :{\r\n              backgroundColor:\"#EDF5E1\"\r\n          }\r\n      },\r\n\r\n      divide: {\r\n          background: \"#EDF5E1 !important\",\r\n      }\r\n}))\r\n\r\n\r\nexport default  function UpdateProfile(props) {\r\n        const { updatemail , updateRoleInBase,updatePass,currentUser , updateUserInBase ,updateAddressInBase} = useAuth()\r\n        const style = useStyles()\r\n        const [userRole,setUserRole] = useLocalStorage(\"role\", \" \")\r\n        const [isPass,setisPass] = useState(false)\r\n        const [isUser,setisUser] = useState(false)\r\n        const [isAddr,setisAddr] = useState(false)\r\n        const [isEmail,setisEmail] = useState(false)\r\n        const [isRole,setisRole] = useState(false)\r\n        const [err,setErr] = useState(0);\r\n        const [open ,setOpen] = useState(false)\r\n        const [openErr,setOpenErr] = useState(false)\r\n        const [CUserName , setCUserName] = useState(\"Loading..\")\r\n        const [CAddr , setCAddr] = useState(\"Loading..\")\r\n        const [Crole,setCrole] = useState(\"Loading...\")\r\n        const promises = []\r\n\r\n\r\n        function submitValues(values){\r\n            if(values.email !== currentUser.email && values.email) {\r\n                promises.push(updatemail(values.email))\r\n            }\r\n    \r\n            if (values.password){\r\n                promises.push(updatePass(values.password))\r\n            }\r\n    \r\n            if(values.Role){\r\n                promises.push(updateRoleInBase(values.Role,currentUser.uid))\r\n                setUserRole(values.Role)\r\n                window.location.reload();\r\n            }\r\n\r\n            if(values.address){\r\n                promises.push(updateAddressInBase((values.Username ?null:CUserName),CAddr,values.address , currentUser.uid))\r\n            }\r\n\r\n            if(values.Username){\r\n                promises.push(updateUserInBase(values.Username,currentUser.uid,(values.address ?values.address:CAddr)))\r\n            }\r\n            \r\n            Promise.all(promises).then(() => {\r\n                setOpen(true);\r\n                setisUser(false);\r\n                setisEmail(false);\r\n                setisPass(false);\r\n                setisRole(false);\r\n                setisAddr(false);\r\n\r\n            }).catch((error) => {\r\n                setErr(error.message)\r\n                setOpenErr(true)\r\n            })\r\n        \r\n    }\r\n        const formik = useFormik({\r\n            initialValues: {\r\n                Username:'',\r\n                email: '',\r\n                password: '',\r\n                passwordConfirmation: '',\r\n              },\r\n            validationSchema: validationSchema,\r\n            onSubmit: submitValues\r\n            })\r\n    const dbRef = database.ref();\r\n\r\n        if(currentUser){\r\n            dbRef.child(\"users\").child(currentUser.uid).get().then((snapshot) => {\r\n            if(snapshot.exists()){\r\n                setCUserName(snapshot.val().username ? snapshot.val().username : \"no User Name\")\r\n                setCrole(snapshot.val().role ? snapshot.val().role : \"no Role found\")\r\n                setCAddr(snapshot.val().waddress ? snapshot.val().waddress : \"no address found\")\r\n            }else {\r\n                setErr(\"error loading data\")\r\n                setOpenErr(true)\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n    \r\n        setOpen(false)\r\n        setOpenErr(false)\r\n      };\r\n\r\n    function showUser() {\r\n        setisUser((prev) => !prev)\r\n    }\r\n    function showEmail(){\r\n        setisEmail((prev) => !prev)\r\n    }\r\n    function showPass(){\r\n        setisPass((prev) => !prev)\r\n    }\r\n\r\n    function showRole(){\r\n        setisRole((prev) => !prev)\r\n    }\r\n\r\n    function showAddr(){\r\n        setisAddr((prev) => !prev)\r\n    }\r\n\r\n\r\n        return (\r\n            <form onSubmit={formik.handleSubmit} style = {{\r\n                justifyContent:\"center\",\r\n                display:\"flex\",\r\n                marginTop:\"150px\"\r\n            }}>\r\n            <Paper style = {{\r\n                padding:\"20px\",\r\n\r\n                right: \"-50%\",\r\n                justifySelf:'center',\r\n                alignItems:'center',\r\n                background:\"#05386B\",\r\n                color:\"#EDF5E1\",\r\n                maxWidth:\"450px\",\r\n                maxHeight:\"500px\",\r\n                float:\"center\"\r\n            }}>\r\n                {open &&<Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                    <Alert onClose={handleClose} severity=\"success\">\r\n                       Profile Updated Successfully!!\r\n                    </Alert>\r\n                    </Snackbar>}\r\n                    {openErr &&<Snackbar open={openErr} autoHideDuration={6000} onClose={handleClose}>\r\n                    <Alert onClose={handleClose} severity=\"error\">\r\n                       {err}\r\n                    </Alert>\r\n                    </Snackbar>}\r\n                <Grid  container spacing = {3}>\r\n\r\n                    <Grid container justify = \"center\" alignItems =\"center\">\r\n                        <Typography variant = \"h2\" style = {{\r\n                            fontSize: \"50px\"\r\n                        }}>Profile</Typography>\r\n                    </Grid>\r\n                    <Grid items xs = {12}>\r\n                    <Divider className = {style.divide} style = {{\r\n                    marginBottom:\"30px\"}}/>\r\n                    </Grid>\r\n                    <Grid item xs = {6}>\r\n                    {isUser?\r\n                        <TextField\r\n                    id = \"Username\"\r\n                    name = \"Username\"\r\n                    label = \"User Name\"\r\n                    type = \"text\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    className = {style.textField}\r\n                    InputLabelProps = {{\r\n                       className : style.label,\r\n                       \r\n                    }}\r\n                    InputProps={{\r\n                        classes: {\r\n                          notchedOutline: style.notchedOutline,\r\n                          input : style.input\r\n                        }\r\n                      }}\r\n                      value={formik.values.Username}\r\n                       onChange = {formik.handleChange}\r\n                    />:<Typography varient = \"h4\">{CUserName}</Typography>}\r\n                    </Grid>\r\n                    <Grid item xs = {6}>\r\n                        <i class=\"fas fa-pencil-alt\" onClick ={showUser} style = {{paddingLeft: \"100px\"}}></i>\r\n                    </Grid>\r\n\r\n\r\n                    <Grid item xs = {6}>\r\n                    {isEmail?<TextField\r\n                    id = \"email\"\r\n                    name = \"email\"\r\n                    label = \"Email\"\r\n                    type = \"text\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    InputLabelProps = {{\r\n                        className : style.label,\r\n                        \r\n                     }}\r\n                     InputProps={{\r\n                         classes: {\r\n                           notchedOutline: style.notchedOutline,\r\n                           input : style.input\r\n                         }\r\n                       }}\r\n                       value={formik.values.email}\r\n                       onChange = {formik.handleChange}\r\n                      error={formik.touched.email && Boolean(formik.errors.email)}\r\n                      helperText={formik.touched.email && formik.errors.email}\r\n                    />:<Typography varient = \"h4\">{currentUser.email}</Typography>}\r\n                    </Grid>\r\n                    <Grid item xs = {6}>\r\n                        <i class=\"fas fa-pencil-alt\" onClick ={showEmail} style = {{paddingLeft: \"100px\"}}></i>\r\n                    </Grid>\r\n                       \r\n                    <Grid item xs = {6}>\r\n                            {isPass?<TextField\r\n                            id = \"password\"\r\n                            name = \"password\"\r\n                            label = \"Password\"\r\n                            type = \"password\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            color = \"primary\"\r\n                            InputLabelProps = {{\r\n                                className : style.label,\r\n                                \r\n                             }}\r\n                             InputProps={{\r\n                                 classes: {\r\n                                   notchedOutline: style.notchedOutline,\r\n                                   input : style.input\r\n                                 },\r\n                                 color: \"#EDF5E1 !important\"\r\n                               }}\r\n                      value={formik.values.password}\r\n                      onChange={formik.handleChange}\r\n                      error={formik.touched.password && Boolean(formik.errors.password)}\r\n                      helperText={formik.touched.password && formik.errors.password}\r\n                            />:<Typography varient = \"h4\">Password</Typography>}\r\n                    </Grid>\r\n                    <Grid item xs = {6}>\r\n                            <i class=\"fas fa-pencil-alt\" onClick ={showPass}\r\n                           style = {{paddingLeft: \"100px\"}}></i>\r\n                    </Grid>\r\n\r\n\r\n                            {isPass?<><Grid item xs = {6}><TextField\r\n                            id = \"passwordConfirmation\"\r\n                            name = \"passwordConfirmation\"\r\n                            label = \"Confirm Password\"\r\n                            type = \"password\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            InputLabelProps = {{\r\n                                className : style.label,\r\n                                \r\n                             }}\r\n                             InputProps={{\r\n                                 classes: {\r\n                                   notchedOutline: style.notchedOutline,\r\n                                   input : style.input\r\n                                 }\r\n                               }}\r\n                               value={formik.values.passwordConfirmation}\r\n                               onChange={formik.handleChange}\r\n                               error={formik.touched.passwordConfirmation && Boolean(formik.errors.passwordConfirmation)}\r\n                               helperText={formik.touched.passwordConfirmation && formik.errors.passwordConfirmation}/></Grid><Grid item xs = {6}>\r\n                           </Grid></>:null}\r\n\r\n                           <Grid item xs = {6}>\r\n                               {isAddr?<TextField\r\n                                id = \"address\"\r\n                                name = \"address\"\r\n                                label = \"Wallet Address\"\r\n                                variant = \"outlined\"\r\n                                type = \"text\"\r\n                                value={formik.values.address}\r\n                                onChange={formik.handleChange}\r\n                                InputProps = {{\r\n                                    classes:{\r\n                                            notchedOutline: style.notchedOutline,\r\n                                        input:style.input\r\n                                    }\r\n                                }}\r\n                                InputLabelProps = {{\r\n                                    className: style.label\r\n                                }}\r\n                      ></TextField>\r\n                        :\r\n                            <Typography style={{ wordWrap: 'break-word' }}varient = \"h4\">\r\n                                Wallet Address</Typography>} </Grid>\r\n                        <Grid item xs = {6}>\r\n                        <i class=\"fas fa-pencil-alt\" onClick ={showAddr}\r\n                       style = {{paddingLeft: \"100px\"}}></i>\r\n                </Grid>\r\n\r\n                    <Grid item xs={6}>\r\n                  {isRole?<TextField\r\n\r\n                    id = \"Role\"\r\n                    name = \"Role\"\r\n                    fullWidth\r\n                    select\r\n                    variant = \"outlined\"\r\n                    label=\"Select Role:\"\r\n                    className = {style.select}\r\n                    InputLabelProps = {{\r\n                        className : style.label,\r\n                        \r\n                     }}\r\n                     InputProps={{\r\n                         classes: {\r\n                           notchedOutline: style.notchedOutline,\r\n                           input : style.input\r\n                         }\r\n                        }}\r\n                        value={formik.values.Role}\r\n                        onChange={formik.handleChange}\r\n                  >\r\n                      {Roles.map( (role , index)=>(\r\n                    <MenuItem value={role} key = {index}>{role}</MenuItem>\r\n                      ))}\r\n               </TextField>:<Typography varient = \"h4\">{Crole}</Typography>}\r\n                </Grid>\r\n\r\n                <Grid item xs = {6}>\r\n                        <i class=\"fas fa-pencil-alt\" onClick ={showRole} style = {{paddingLeft: \"100px\"}}></i>\r\n                    </Grid>\r\n\r\n                    </Grid>\r\n                    <Grid container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"center\">\r\n                    <Button className = {style.button}  type = \"submit\">Update</Button>\r\n                    </Grid>\r\n            </Paper>\r\n            </form>\r\n        )\r\n    }\r\n","import React from \"react\";\r\n\r\nexport function Instructions(){\r\n\r\n    return(\r\n        <div style = {{\r\n        position:\"absolute\",\r\n        top:\"0\",\r\n        left:\"0\",\r\n        bottom:\"0\",\r\n        right:\"0\",\r\n        height:\"100%\",\r\n        width:\"100%\",\r\n        display:\"flex\",\r\n        justiftyContent:\"center\",\r\n        background: \"#5cdb95\"}}>\r\n            <div style = {{\r\n                transform: \"translateY(20%)\",\r\n                color:\"#05386B\",\r\n            }}>\r\n                <h1>Your browser is not connected to the blockchain follow given steps:</h1>\r\n                <ul style = {{\r\n                    fontSize: \"20px\",\r\n                    display: \"grid\",\r\n                    gap:\"5px\"\r\n                }}>\r\n                    <li>\r\n                        Download MetaMask extension from your browser's extension store.\r\n                    </li>\r\n                    <li>\r\n                        setup Account and switch to kovan testnet from ethereum mainnet.\r\n                    </li>\r\n                    <li>\r\n                        browse to https://faucet.kovan.network/ and request test ETH.\r\n                    </li>\r\n                    <li>\r\n                        refresh the page and enjoy!!!.\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React,{useContext, useEffect, useState } from \"react\";\r\nimport Web3 from \"web3\";\r\nimport supply from '../../abis/supplyChain.json'\r\nimport {Instructions} from \"./instructions\";\r\nconst blockContext  = React.createContext();\r\n\r\n\r\nexport function useBlock(){\r\n    return useContext(blockContext);\r\n}\r\n\r\nexport function BlockProvider({children}){\r\n    const [account , setAccount] = useState();\r\n    const [supplyChain ,setsupplyChain] = useState();\r\n    const [isMetamask, setIsMetamask] = useState(false);\r\n    const [web3,setWeb3] = useState();\r\n    useEffect(() => {\r\n         loadWeb3()\r\n         if(isMetamask){\r\n       loadBlockChainData()\r\n       window.ethereum.on('accountsChanged', function (accounts) {\r\n       setAccount(accounts[0])\r\n      })\r\n      return window.ethereum.off\r\n    }\r\n    },[])\r\n\r\n    async function loadWeb3() {\r\n        if (window.ethereum) {\r\n          setIsMetamask(true)\r\n        window.web3 = new Web3(window.ethereum)\r\n          await window.ethereum.enable()\r\n        }\r\n        else if (window.web3) {\r\n          setIsMetamask(true)\r\n        window.web3 = new Web3(window.web3.currentProvider)\r\n        }\r\n        else {\r\n          window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\r\n        }\r\n      }\r\n\r\n      async function loadBlockChainData(){\r\n\r\n          const web3 = window.web3\r\n          setWeb3(web3)\r\n          const accounts = await web3.eth.getAccounts()\r\n          setAccount(accounts[0])\r\n          const networkId = await web3.eth.net.getId()\r\n          console.log(networkId)\r\n          const networkData = supply.networks[networkId]\r\n          const chain = await web3.eth.Contract(supply.abi,networkData.address,{ transactionConfirmationBlocks: 1,gasPrice :200000000000})\r\n            setsupplyChain(chain)\r\n      }\r\n\r\n      function addProduct(name){\r\n        return supplyChain.methods.addProduct(name).send({from : account})\r\n      }\r\n\r\n      function updateLocation(location ,id,address){\r\n        return supplyChain.methods.changeLocation(location,id,address).send({from : account})\r\n      } \r\n\r\n      function trackProduct(id){\r\n        return supplyChain.methods.fetchInfo(id).call()\r\n      }\r\n      function productCount(){\r\n        return supplyChain.methods.productCount().call()\r\n      }\r\n\r\n      function fetchOwner(id){\r\n        return supplyChain.methods.fetchAddress(id).call()\r\n      }\r\n\r\n      function fetchLocations(id){\r\n        return supplyChain.methods.fetchAllLocation(id).call()\r\n      }\r\n      const value = {\r\n          addProduct,\r\n          account,\r\n          productCount,\r\n          updateLocation,\r\n          trackProduct,\r\n          fetchOwner,\r\n          fetchLocations\r\n\r\n      }\r\n      return(\r\n          <blockContext.Provider value = {value}>\r\n              {isMetamask?children: <Instructions/>}\r\n          </blockContext.Provider>\r\n      ) \r\n}\r\n","/*colors scheme #05386B #379683 #5cdb95 #8ee4af #EDF5E1 */\r\n\r\nimport React,{useRef ,useState} from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {useAuth} from \"../contexts/authContext\";\r\nimport {useBlock} from \"../contexts/blockContext\";\r\nimport QrReader from 'react-qr-reader';\r\nimport {\r\n    Container,\r\n  Typography,\r\n  Grid,\r\n  Button,\r\n  Divider,\r\n  Snackbar,\r\n  Box,\r\n  TextField,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Slide,\r\n} from '@material-ui/core';\r\n\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\nconst useStyles = makeStyles((theme) => (\r\n    {\r\n        input: {\r\n            color:\" #05386B !important\",\r\n            fontWeight:\"400 !important\",\r\n            fontSize: \"20px\",\r\n            marginTop:\"0px\",\r\n            marginBottom:\"0px\"\r\n          },\r\n\r\n        notchedOutline:{\r\n            borderWidth:\"none !important\",\r\n            border:\"none !important\"\r\n        },\r\n        divide: {\r\n            background: \"#EDF5E1 !important\",\r\n            height:\"70px\",\r\n        }\r\n        \r\n    }\r\n))\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n  });\r\n\r\nfunction FetchLocation(props){\r\n    const style = useStyles()\r\n\r\n    const handleClose = () => {\r\n       props.setOpen(false);\r\n   };\r\n\r\n   function LocDisp(props){\r\n       return(\r\n           <Grid item xs = {12}>\r\n               <Grid container justify = \"center\">\r\n           {props.index !== 1 ?<Divider orientation =\"vertical\" className = {style.divide}/>:null}\r\n           </Grid>\r\n           <Grid container justify = \"center\">\r\n               <Typography variant = \"h6\" style = {{\r\n                   color:\"#EDF5E1\",\r\n                   fontSize:\"18px\",\r\n                   fontWeight:\"350\"\r\n               }}>{props.location}</Typography>\r\n           </Grid>\r\n           </Grid>\r\n       )\r\n   }\r\n   return(<Dialog\r\n   open={props.open}\r\n   TransitionComponent={Transition}\r\n   keepMounted\r\n   onClose={handleClose}\r\n   aria-labelledby=\"alert-dialog-slide-title\"\r\n   aria-describedby=\"alert-dialog-slide-description\"\r\n   PaperProps={{\r\n       style: {\r\n         backgroundColor: '#05386B',\r\n       }\r\n   }}\r\n >\r\n   <DialogTitle id=\"alert-dialog-slide-title\" style = {{\r\n         color: '#EDF5E1',\r\n       }}\r\n>{\"Every Location of this Product:\"}</DialogTitle>\r\n   <DialogContent>\r\n       <Grid container>\r\n       {props.locations.map((value , index) => {\r\n           if(value === '' ){\r\n               return\r\n           }else{\r\n       return <LocDisp location ={value} key = {index} index = {index}/>\r\n        }\r\n        })}\r\n       </Grid>\r\n   </DialogContent>\r\n   <DialogActions >\r\n     <Button onClick={handleClose} size = \"small\" style = {{\r\n         backgroundColor: \"#5cdb95\",\r\n         color: \"#05386B\",\r\n         \"&:hover\" :{\r\n             backgroundColor:\"#EDF5E1\"\r\n         }\r\n     }}>\r\n       Close\r\n     </Button>\r\n   </DialogActions>\r\n </Dialog>)\r\n }\r\n\r\nexport function TrackProduct(){\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n        setOpenErr(false)\r\n      };\r\n    const [id,setId] = useState();\r\n    const {trackProduct , fetchOwner,fetchLocations} = useBlock();\r\n    const {addressToName} = useAuth();\r\n    const [name,setName] = useState();\r\n    const [date,setDate] = useState();\r\n    const [cLoc,setCLoc] = useState();\r\n    const [owner,setOwner] = useState();\r\n    const [err,setErr] = useState(false);\r\n    const [openErr,setOpenErr] = useState(false);\r\n    const [locations,setLocations] = useState([\"Please Enter Product ID\"]);\r\n    const qrRef = useRef(5);\r\n\r\n    async function handleScan(){\r\n        qrRef.current.openImageDialog();\r\n    }\r\n    async function handleFetchInfo(id){\r\n        try {\r\n            console.log(id)\r\n            const dataRaw = await trackProduct(id)\r\n            const Address = await fetchOwner(id)\r\n            const Locations = await fetchLocations(id)\r\n            const data = dataRaw.split(\",\")\r\n            setLocations(Locations)\r\n            if(data[0]){\r\n            const ownerRaw = await addressToName(Address)\r\n            setOwner(ownerRaw)\r\n            setName(data[0])\r\n            setCLoc(data[1])\r\n            const temp = new Date(data[2]*1000)\r\n            const dat = temp.getDate();\r\n            var month = temp.getMonth();\r\n            var year = temp.getFullYear();\r\n            var fullDate = dat + \"/\" +(month + 1) + \"/\" + year;\r\n\r\n            setDate(fullDate)\r\n\r\n            }\r\n            else {\r\n                throw(\"No Product registed with entered ID.\")\r\n            }\r\n        }\r\n        catch(error){\r\n            setErr(error)\r\n            setOpenErr(true)\r\n        }\r\n    }\r\n\r\n    const style = useStyles();\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    return(\r\n    <Grid container spacing = {3} style = {{\r\n        transform:\"translateY(10%)\"\r\n    }}>\r\n                    {openErr &&<Snackbar open={openErr} autoHideDuration={6000} onClose={handleClose}>\r\n                    <Alert onClose={handleClose} severity=\"error\">\r\n                       {err}\r\n                    </Alert>\r\n                    </Snackbar>}\r\n        <Grid item xs = {12}>\r\n    <Container>\r\n    <Grid container>\r\n    <Grid xs = {11}>\r\n    <TextField\r\n    fullWidth\r\n    type = \"number\"\r\n    placeholder=\"Search Product ID\"\r\n    min\r\n    variant= \"outlined\"\r\n    size = \"small\"\r\n    margin = \"none\"\r\n    style = {{\r\n        background:\"#5cdb95\",\r\n        border: \"5px solid #05386B\",\r\n        color:\"05386B\"\r\n    }}\r\n    disableUnderline = \"true\"\r\n    InputProps={{\r\n        classes : {\r\n            notchedOutline:style.notchedOutline,\r\n            input:style.input\r\n        },\r\n        inputProps: { min: 0}\r\n    }} onChange = {(e) => setId(e.target.value)}\r\n    />\r\n        </Grid>\r\n\r\n            <Grid item xs = {1} style = {{\r\n                border:\"5px solid #05386B\",\r\n                borderLeft:\"none\"\r\n            }}>\r\n                <Grid container justify = 'center' alignItems = \"center\">\r\n    <i class=\"fas fa-search\" style = {{\r\n        fontSize:\"25px\",\r\n        color: \"#05386B\",\r\n        transform:\"translateY(30%)\",\r\n        cursor: \"pointer\"\r\n    }} onClick = {() => {handleFetchInfo(id)}}></i></Grid>\r\n    </Grid>\r\n        </Grid>\r\n    </Container>\r\n    </Grid>\r\n\r\n    <Grid container justify = \"center\" >\r\n             <span style = {{marginTop:\"7px\" ,color: \"#05386B\" ,fontWeight:\"650\"}}>OR</span>\r\n         </Grid>\r\n         <Grid container justify = \"center\" style = {{\r\n         }}>\r\n         <Button size = \"small\"><i class=\"fas fa-qrcode\" style = {{\r\n                    color:\"#05386B\",\r\n                    fontSize:\"15px\"\r\n                }}></i><div style = {{\r\n                    fontSize:\"16px\",\r\n                    color:\"#05386B\",\r\n                    marginLeft:\"2px\",\r\n                }} onClick = {handleScan}>Scan QR</div></Button></Grid>\r\n         <QrReader\r\n         ref={qrRef}\r\n        delay={300}\r\n        onScan={(result) => {\r\n            try{\r\n            if(!result){\r\n                throw({ message: \"Please Upload a valid image\"})\r\n            }\r\n            handleFetchInfo(result)\r\n        }\r\n        catch(error){\r\n            setErr(error.message)\r\n            setOpenErr(true)}\r\n        }}\r\n        onError = { (error) => { setErr(error)\r\n            setOpenErr(true)}}\r\n        legacyMode\r\n        />\r\n\r\n    <Grid item xs = {12}>\r\n        <Grid container justify = \"center\" alignItems = \"center\">\r\n    <Box style = {{\r\n        background:\"#05386B\",\r\n        marginTop:\"50px\",\r\n        justifySelf:\"center\",\r\n        width: \"500px\",\r\n        padding:\"30px\",\r\n        color:\"#EDF5E1\",\r\n\r\n\r\n        borderRadius: \"4px\",\r\n        boxShadow: \"0px 0px 12px 2px rgba(15, 15, 15, 0.2)\"\r\n        \r\n    }}>\r\n        <Grid container spacing = {8}>\r\n            <Grid item xs = {12}>\r\n                <Grid container spacing  = {3}  justify = \"center\" >\r\n                    <Grid item xs = {6}><h5  style = {{fontWeight:\"350\"}}className = \"labelText\">Product Name:</h5></Grid>\r\n                    <Grid item xs = {6}><h6 style = {{\r\n                        fontSize:\"20px\",\r\n                        fontWeight:\"350\"\r\n                    }}>{name}</h6></Grid>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid item xs = {12}>\r\n                <Grid container spacing  = {3}  justify = \"center\" >\r\n                    <Grid item xs = {6}><h5  style = {{fontWeight:\"350\"}}className = \"labelText\">Current Owner:</h5></Grid>\r\n                    <Grid item xs = {6}><h6 style = {{\r\n                        fontSize:\"20px\",\r\n                        fontWeight:\"350\"\r\n                    }}>{owner}</h6></Grid>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid item xs = {12}>\r\n                <Grid container row spacing  = {1}>\r\n                    <Grid item xs = {6}><h5 style = {{fontWeight:\"350\"}}  className = \"labelText\">Registered on:</h5></Grid>\r\n                    <Grid item xs = {6}><h6 style = {{\r\n                        fontSize:\"20px\",\r\n                        fontWeight:\"350\"\r\n                    }}>{date}</h6></Grid>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid item xs = {12}>\r\n                <Grid container row spacing  = {1}>\r\n                    <Grid item xs = {6}><h5 style = {{ fontWeight:\"350\"}}  className = \"labelText\">Current Location:</h5></Grid>\r\n                    <Grid item xs = {6}><h6 style = {{\r\n                        fontSize:\"20px\",\r\n                        fontWeight:\"350\"\r\n                    }}>{cLoc}</h6></Grid>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid item xs = {12}>\r\n            <Grid container justify = \"center\">\r\n            <h6 style = {{\r\n        cursor: \"pointer\",\r\n\r\n    }} onClick ={handleClickOpen}>Tap to know every location</h6>\r\n            </Grid>\r\n            </Grid>\r\n        </Grid>\r\n        <FetchLocation  open = {open} setOpen = {setOpen} locations = {locations}/>\r\n    </Box>\r\n    </Grid>\r\n    </Grid>\r\n    </Grid>)\r\n}","/*colors scheme #05386B #379683 #5cdb95 #8ee4af #EDF5E1*/\r\n\r\nimport React ,{useState, useRef} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport {useBlock} from \"../contexts/blockContext\";\r\nimport QRCode from \"qrcode\";\r\nimport QrReader from 'react-qr-reader';\r\nimport {\r\n  Typography,\r\n  Paper,\r\n  Grid,\r\n  Button,\r\n  Divider,\r\n  Snackbar,\r\n  Box,Tab,Tabs,\r\n  TextField,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Slide,\r\n  DialogContentText,\r\n} from '@material-ui/core';\r\n\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n  });\r\n  \r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`vertical-tabpanel-${index}`}\r\n        aria-labelledby={`vertical-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && (\r\n          <Box style = {{\r\n              width: \"300px\",\r\n              paddingLeft:\"20px\",\r\n          }}>\r\n              {children}\r\n          </Box>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  TabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n  };\r\n  \r\n  function a11yProps(index) {\r\n    return {\r\n      id: `vertical-tab-${index}`,\r\n      'aria-controls': `vertical-tabpanel-${index}`,\r\n    };\r\n  }\r\n  \r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      backgroundColor: \"#05386B !important\",\r\n      display: 'flex',\r\n      '.MuiBox-root-13':{\r\n          padding:\"0px !important\"\r\n      }\r\n    },\r\n    tabs: {\r\n      borderRight: `1px solid ${theme.palette.divider}`,\r\n    },\r\n    label : {\r\n        color: \"#EDF5E1 !important\"\r\n    },\r\n    notchedOutline: {\r\n        borderWidth: \"2px\",\r\n        borderColor: \"#5cdb95 !important\",\r\n        color:\"#EDF5E1 !important\"\r\n\r\n      },\r\n      input: {\r\n        color:\"#EDF5E1 !important\"\r\n      },\r\n\r\n      divide: {\r\n          background: \"#EDF5E1 !important\",\r\n          marginTop:\"0px\"\r\n      }\r\n  }));\r\n  \r\nfunction VerticalTabs(props) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n    const [locat, setLocat] = useState();\r\n    const [address, setAddress] = useState();\r\n    const [id, setId] = useState();\r\n    const [name, setName] = useState();\r\n    const qrRef = useRef(5);\r\n\r\n    async function handleScan(){\r\n        qrRef.current.openImageDialog();\r\n    }\r\n    async function handleUpdate(){\r\n      try{\r\n        if(!locat){\r\n          throw({\r\n            message:\"Please Enter Location\"\r\n          })\r\n        }\r\n        if(!id){\r\n          throw({\r\n            message:\"Please Enter Product ID\"\r\n          })\r\n        }\r\n        if(!address){\r\n          throw({\r\n            message:\"Please Enter new Address\"\r\n          })\r\n        }\r\n        const check = await props.pc(id)\r\n        if(id > check){\r\n          throw({\r\n            message:\"No Product registed with entered ID.\"\r\n          })\r\n        }\r\n        await props.uloc(locat,id,address)\r\n        props.setsOpen(true)\r\n      }\r\n    catch(error){\r\n      props.setErr(error.message)\r\n      props.setOpenErr(true)\r\n    }\r\n  }\r\n    const handleChange = (event, newValue) => {\r\n      setValue(newValue);\r\n    };\r\n\r\n   async function handleGen(){\r\n    try {\r\n      if(!name){\r\n        throw({\r\n          \"message\":\"Please Enter Product Name\"\r\n        })\r\n      }\r\n        await props.addPro(name)\r\n        props.handleClickOpen()\r\n         }\r\n      catch(error){\r\n          props.setErr(error.message)\r\n          props.setOpenErr(true)\r\n        }\r\n  }\r\n    return (\r\n      <div className={classes.root}>\r\n        <Tabs\r\n          orientation=\"vertical\"\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"Vertical tabs\"\r\n          className={classes.tabs}\r\n        >\r\n          <Tab label=\"Add\" {...a11yProps(0)} />\r\n          <Tab label=\"Scan\" {...a11yProps(1)} />\r\n        </Tabs>\r\n        <TabPanel value={value} index={0}>\r\n            <Grid container spacing = {3} style = {{\r\n                paddingTop:\"0px\"\r\n            }}>\r\n                <Grid container xs = {12} justify= \"center\" alignItems= \"center\">\r\n                    <Typography variant = \"h5\" style = {{\r\n                        fontWeight:\"320\",\r\n                        marginTop:\"20px\"\r\n                    }}>Enter Product details:</Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs = {12} justify= \"center\" alignItems= \"center\">\r\n                   <Divider className = {classes.divide} style = {{\r\n                   }}></Divider> \r\n                </Grid>\r\n\r\n                <Grid container xs = {12} justify= \"center\" alignItems= \"center\" style = {{\r\n                    marginTop:\"10px\"\r\n                }}>\r\n          \r\n                </Grid>\r\n                <Grid container xs = {12} justify= \"center\" alignItems= \"center\" style = {{\r\n                    marginTop:\"25px\"\r\n                }}>\r\n                <TextField\r\n                    label = \"Product Name\"\r\n                    type = \"text\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    InputLabelProps = {{\r\n                       className : classes.label,\r\n                       \r\n                    }}\r\n                    InputProps={{\r\n                        classes: {\r\n                          notchedOutline: classes.notchedOutline,\r\n                          input : classes.input\r\n                        }\r\n                      }}\r\n                      onChange = {(e) => setName(e.target.value)}\r\n                    required/>\r\n                </Grid>\r\n\r\n                <Grid container xs = {12} justify= \"center\" alignItems= \"center\" style = {{\r\n                    paddingBottom:\"20px\",\r\n                    marginTop:\"20px\"\r\n                }}>\r\n                <Button size = \"small\" onClick = {handleGen}><i class=\"fas fa-qrcode\" style = {{\r\n                    color:\"#EDF5E1\",\r\n                    fontSize:\"15px\"\r\n                }}></i><div style = {{\r\n                    fontSize:\"16px\",\r\n                    color:\"#EDF5E1\",\r\n                    marginLeft:\"2px\",\r\n                }}>Generate QR</div></Button>\r\n                </Grid>\r\n            </Grid>\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1}>\r\n         <Grid container justify = \"center\" style = {{\r\n         }}>\r\n          <Grid container justify = \"center\" style = {{\r\n                  }}>\r\n                      <TextField\r\n                              label = \"Enter Product ID\"\r\n                              type = \"number\"\r\n                              variant=\"outlined\"\r\n                              placeholder = { id?id:null}\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              InputLabelProps = {{\r\n                                className : classes.label,\r\n                                \r\n                              }}\r\n                              InputProps={{\r\n                                  classes: {\r\n                                    notchedOutline: classes.notchedOutline,\r\n                                    input : classes.input\r\n                                  }\r\n                                }}\r\n                                onChange = {(e) => setId(e.target.value)}\r\n                              />\r\n                  </Grid>\r\n                  <Grid container justify = \"center\" style = {{\r\n                  }}>\r\n                      <span style = {{marginTop:\"10px\"}}>OR</span>\r\n                  </Grid>\r\n\r\n         <Button size = \"small\" onClick = {handleScan}><i class=\"fas fa-qrcode\" style = {{\r\n                    color:\"#EDF5E1\",\r\n                    fontSize:\"15px\"\r\n                }}></i><div style = {{\r\n                    fontSize:\"16px\",\r\n                    color:\"#EDF5E1\",\r\n                    marginLeft:\"2px\",\r\n                }}>Scan QR</div></Button>\r\n                <QrReader\r\n         ref={qrRef}\r\n        delay={300}\r\n        onScan={(result) => {\r\n            try{\r\n            if(!result){\r\n                throw({ message: \"Please Upload a valid image\"})\r\n            }\r\n            setId(result)\r\n        }\r\n        catch(error){\r\n          props.setErr(error.message)\r\n          props.setOpenErr(true)}\r\n        }}\r\n        onError = { (error) => { props.setErr(error.message)\r\n          props.setOpenErr(true)}}\r\n        legacyMode\r\n        />\r\n         </Grid>\r\n\r\n         <Grid container justify = \"center\" style = {{\r\n             marginTop:\"20px\"\r\n         }}>\r\n             <TextField\r\n                    label = \"Update Location\"\r\n                    type = \"text\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    InputLabelProps = {{\r\n                       className : classes.label,\r\n                       \r\n                    }}\r\n                    InputProps={{\r\n                        classes: {\r\n                          notchedOutline: classes.notchedOutline,\r\n                          input : classes.input\r\n                        }\r\n                      }}\r\n                      onChange = {(e) => setLocat(e.target.value)}\r\n                    />\r\n         </Grid>\r\n\r\n         <Grid container justify = \"center\" style = {{\r\n             marginTop:\"20px\"\r\n         }}>\r\n             <TextField\r\n                    label = \"new Owner\"\r\n                    type = \"text\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    InputLabelProps = {{\r\n                       className : classes.label,\r\n                       \r\n                    }}\r\n                    InputProps={{\r\n                        classes: {\r\n                          notchedOutline: classes.notchedOutline,\r\n                          input : classes.input\r\n                        }\r\n                      }}\r\n                      onChange = {(e) => setAddress(e.target.value)}\r\n                    />\r\n         </Grid>\r\n\r\n         <Grid container justify = \"center\" style = {{\r\n             marginTop:\"20px\"\r\n         }}>\r\n         <Button size = \"small\" style = {{\r\n             background:\"#5cdb95\",\r\n             color: \"#05386B\"\r\n         }} onClick = {handleUpdate}>Update</Button>\r\n         </Grid>\r\n        </TabPanel>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\nfunction GenQR(props){\r\n\r\n     const handleClose = () => {\r\n        props.setOpen(false);\r\n    };\r\n    return(<Dialog\r\n    open={props.open}\r\n    TransitionComponent={Transition}\r\n    keepMounted\r\n    onClose={handleClose}\r\n    aria-labelledby=\"alert-dialog-slide-title\"\r\n    aria-describedby=\"alert-dialog-slide-description\"\r\n    PaperProps={{\r\n        style: {\r\n          backgroundColor: '#05386B',\r\n        }\r\n    }}\r\n  >\r\n    <DialogTitle id=\"alert-dialog-slide-title\" style = {{\r\n          color: '#EDF5E1',\r\n        }}\r\n>{\"Genarated QR code\"}</DialogTitle>\r\n    <DialogContent>\r\n      <DialogContentText id=\"alert-dialog-slide-description\" style = {{\r\n          color: '#EDF5E1',\r\n          marginBottom:\"5px\"\r\n        }}>\r\n          Please tag the genarated QR code to the Product.\r\n      </DialogContentText>\r\n      <DialogContent id=\"alert-dialog-slide-description\" style = {{\r\n          color: '#EDF5E1',\r\n          marginBottom:\"5px\",\r\n          display: \"flex\",\r\n          flexDirection:\"row\",\r\n          justifyContent:\"center\",\r\n        }}>\r\n          {\r\n          <a href={props.image} download>\r\n          <img src={props.image} alt=\"img\"/>\r\n          </a>}\r\n      </DialogContent>\r\n      <DialogContentText id=\"alert-dialog-slide-description-2\" style = {{\r\n          color: '#EDF5E1'\r\n        }}>\r\n          Product ID:{props.pc}\r\n      </DialogContentText>\r\n    </DialogContent>\r\n    <DialogActions >\r\n      <Button onClick={handleClose} size = \"small\" style = {{\r\n          backgroundColor: \"#5cdb95\",\r\n          color: \"#05386B\",\r\n          \"&:hover\" :{\r\n              backgroundColor:\"#EDF5E1\"\r\n          }\r\n      }}>\r\n        Close\r\n      </Button>\r\n    </DialogActions>\r\n  </Dialog>)\r\n  }\r\n\r\nexport function AddProduct(){\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [sopen, setsOpen] = useState(false);\r\n    const [openErr, setOpenErr] = useState(false);\r\n    const [err, setErr] = useState(false);\r\n    const [imageUrl,setImageUrl] = useState();\r\n    const [pc, setPc] = useState();\r\n    const {addProduct,productCount,updateLocation} = useBlock();\r\n\r\n    const handleClickOpen = async () => {\r\n      const prod = await productCount()\r\n         setPc(prod.toNumber());\r\n    const response = await QRCode.toDataURL(prod.toNumber().toString(),{\r\n      color:{\r\n        dark: \"#05386B\",\r\n        light: \"#EDF5E1\"\r\n      },\r\n      scale:\"8\",\r\n      margin:\"2\"\r\n\r\n    });\r\n    setImageUrl(response)\r\n        setOpen(true);\r\n    };\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n    \r\n        setsOpen(false)\r\n        setOpenErr(false)\r\n      };\r\n\r\n   return(\r\n       <div style = {{\r\n        justifyContent:\"center\",\r\n        padding:\"30px\",\r\n        display:\"flex\",\r\n        marginTop:\"250px\"\r\n       }}>\r\n           <Paper style = {{\r\n                padding:\"25px\",\r\n                right: \"-50%\",\r\n                justifySelf:'center',\r\n                alignItems:'center',\r\n                background:\"#05386B\",\r\n                color:\"#EDF5E1\",\r\n            }}>\r\n                {sopen &&<Snackbar open={sopen} autoHideDuration={6000} onClose={handleClose}>\r\n                    <Alert onClose={handleClose} severity=\"success\">\r\n                       Location Updated Successfully!!\r\n                    </Alert>\r\n                    </Snackbar>}\r\n                    {openErr &&<Snackbar open={openErr} autoHideDuration={6000} onClose={handleClose}>\r\n                    <Alert onClose={handleClose} severity=\"error\">\r\n                       {err}\r\n                    </Alert>\r\n                    </Snackbar>}\r\n                <VerticalTabs handleClickOpen = {handleClickOpen} setsOpen = {setsOpen} \r\n                addPro = {addProduct} setErr = {setErr}  setOpenErr = {setOpenErr} pc = {productCount} uloc = {updateLocation} />\r\n                <GenQR open = {open} setOpen = {setOpen}  pc = {pc} image = {imageUrl}/>\r\n           </Paper>\r\n       </div>\r\n   ) \r\n}","import React from \"react\";\r\nimport {\r\nTypography,\r\nButton,\r\nDialog,\r\nDialogActions,\r\nDialogContent,\r\nDialogTitle,\r\n} from '@material-ui/core';\r\nimport {} from \"@material-ui/core\";\r\n\r\nexport function About(props){\r\n\r\n    const {open,setOpen} = props\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return(\r\n        <div>\r\n             <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n          About\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <Typography gutterBottom>\r\n          This application provides platform for sellers and logistics companies to help\r\nTheir customers track orders. The application will have different login portals for\r\nDistributer, buyers, and manufacturers.\r\nHere is how the process work:\r\n          </Typography>\r\n          <Typography gutterBottom>\r\n            <ul>\r\n              <li>\r\n              Manufacturer will add product on the portal and download a QR code generated\r\n              after adding the product. The QR code will be tagged on the shipping box.\r\n              </li>\r\n              <li>\r\n              Then at every freight hub the distributer can scan and update the location of the \r\n              product.\r\n                </li>\r\n                <li>\r\n                Hence, when the product finally reach the retailer and consumers they can easily \r\n                check each and every location of the product.\r\n                </li>\r\n            </ul>\r\n          </Typography>\r\n          <Typography gutterBottom>\r\n          The application will allow different stakeholders (manufacturers, importer, retailer etc.) to\r\n          track the product at every step of the shipment process.\r\n          </Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleClose}>\r\n            close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n        </div>\r\n    )\r\n}","/*colors scheme #05386B #379683 #5cdb95 #8ee4af #EDF5E1 */\r\n\r\nimport React, {useState} from 'react';\r\nimport {useAuth} from '../contexts/authContext';\r\nimport UpdateProfile from \"../login/updateProfile\";\r\nimport {useHistory, Route} from \"react-router-dom\"; \r\nimport {TrackProduct} from \"./trackProduct\";\r\nimport {AddProduct} from \"./addProduct\" ;\r\nimport \"./navbar.scss\";\r\nimport {About} from \"./about\";\r\nimport {Nav ,Navbar , NavDropdown,Container} from \"react-bootstrap\";\r\n\r\n\r\nexport function ManuDash(props){\r\n\r\n    const [icon, setIcon] = useState(true);\r\n    const [Bdr,setBdr] = useState(true);\r\n    const [open,setOpen] = useState(false);\r\n    const {logout} = useAuth();\r\n    const history = useHistory();\r\n\r\n      const handlelogout = async (e) => {\r\n        await logout().then((user) => {\r\n          history.push('./login')\r\n      }\r\n      )\r\n    }\r\n\r\n    function handleOpen(){\r\n      setOpen(true)\r\n    }\r\n\r\n    return(<div style = {{\r\n      position:\"absolute\",\r\n        top:\"0\",\r\n        left:\"0\",\r\n        bottom:\"0\",\r\n        right:\"0\",\r\n        height:\"100vh\",\r\n        width:\"100%\",\r\n        backgroundColor:\"#5cdb95\"\r\n    }}>\r\n            <Navbar expand =\"lg\" style = {{\r\n              background: \"#8ee4af\",\r\n              overflow:\"visible\",\r\n              borderBottom: Bdr?\"4px solid #05386B\":\"none\",\r\n            }} sticky = \"top\">\r\n              <Navbar.Brand style = {{\r\n                marginLeft: \"50px\",\r\n                color:\"#05386B\",\r\n                fontWeight: \"500\",\r\n                fontSize:\"22px\",\r\n                flexGrow: \"10\"\r\n              }}>\r\n                Supply Chain\r\n              </Navbar.Brand>\r\n              <Navbar.Toggle style = {{\r\n                border:\"none\",\r\n                color: \"#05386B\",\r\n                fontSize:\"25px\"\r\n              }}  onClick = {() => {setIcon(prev => !prev);setBdr(prev => !prev)}}>\r\n                <i class = {icon?\"fa fa-bars\":\"fa fa-times\"} ></i>\r\n              </Navbar.Toggle>\r\n              <Navbar.Collapse>\r\n              <Nav>\r\n              <Nav.Link href=\"./#/home/addproduct\" >Add Product</Nav.Link>\r\n              <Nav.Link href=\"./#/home/trackproduct\" >Track Product</Nav.Link>\r\n              <Nav.Link onClick = {handleOpen} >About</Nav.Link>\r\n              < NavDropdown title = \"Profile\">\r\n                <NavDropdown.Item href=\"./#/home/profile\">Update Profile</NavDropdown.Item>\r\n                <NavDropdown.Item onClick = {handlelogout} >Logout</NavDropdown.Item>\r\n            </NavDropdown>\r\n              </Nav>\r\n              </Navbar.Collapse>\r\n            </Navbar>\r\n            <Container component=\"main\" fluid>\r\n                <Route path = \"/home/profile\" component = {UpdateProfile}></Route>\r\n                <Route path = \"/home/trackproduct\" component = {TrackProduct}></Route>\r\n                <Route path = \"/home/addproduct\" component = {AddProduct}></Route>\r\n                <About open = {open} setOpen = {setOpen}/>\r\n            </Container>\r\n            </div>\r\n          )\r\n}","import React, {useState} from 'react';\r\nimport {useAuth} from '../contexts/authContext';\r\nimport UpdateProfile from \"../login/updateProfile\";\r\nimport {useHistory, Route} from \"react-router-dom\"; \r\nimport {TrackProduct} from \"./trackProduct\";\r\nimport \"./navbar.scss\";\r\nimport {About} from \"./about\";\r\nimport {Nav ,Navbar , NavDropdown,Container} from \"react-bootstrap\";\r\n\r\n\r\nexport function BuyerDash(){\r\n\r\n    const [icon, setIcon] = useState(true);\r\n    const [open,setOpen] = useState(false);\r\n    const [Bdr,setBdr] = useState(true);\r\n    const {logout} = useAuth();\r\n    const history = useHistory();\r\n      const handlelogout = async (e) => {\r\n        await logout().then((user) => {\r\n          history.push('./login')\r\n      }\r\n      )\r\n    }\r\n    function handleOpen(){\r\n      setOpen(true)\r\n    }\r\n\r\n\r\n    return(<div style = {{\r\n      position:\"absolute\",\r\n        top:\"0\",\r\n        left:\"0\",\r\n        bottom:\"0\",\r\n        right:\"0\",\r\n        height:\"100%\",\r\n        width:\"100%\",\r\n        backgroundColor:\"#5cdb95\"\r\n    }}>\r\n            <Navbar expand =\"lg\" style = {{\r\n              background: \"#8ee4af\",\r\n              overflow:\"visible\",\r\n              borderBottom: Bdr?\"4px solid #05386B\":\"none\",\r\n            }} sticky = \"top\">\r\n              <Navbar.Brand style = {{\r\n                marginLeft: \"50px\",\r\n                color:\"#05386B\",\r\n                fontWeight: \"500\",\r\n                fontSize:\"22px\",\r\n                flexGrow: \"10\"\r\n              }}>\r\n                Supply Chain\r\n              </Navbar.Brand>\r\n              <Navbar.Toggle style = {{\r\n                border:\"none\",\r\n                color: \"#05386B\",\r\n                fontSize:\"25px\"\r\n              }}  onClick = {() => {setIcon(prev => !prev);setBdr(prev => !prev)}}>\r\n                <i class = {icon?\"fa fa-bars\":\"fa fa-times\"} ></i>\r\n              </Navbar.Toggle>\r\n              <Navbar.Collapse>\r\n              <Nav>\r\n              <Nav.Link href=\"./#/home/trackproduct\" >Track Product</Nav.Link>\r\n              <Nav.Link onClick = {handleOpen}>About</Nav.Link>\r\n              < NavDropdown title = \"Profile\">\r\n                <NavDropdown.Item href=\"./#/home/profile\">Update Profile</NavDropdown.Item>\r\n                <NavDropdown.Item onClick = {handlelogout} >Logout</NavDropdown.Item>\r\n            </NavDropdown>\r\n              </Nav>\r\n              </Navbar.Collapse>\r\n            </Navbar>\r\n            <Container component=\"main\" fluid>\r\n                <Route path = \"/home/profile\" component = {UpdateProfile}></Route>\r\n                <Route path = \"/home/trackproduct\" component = {TrackProduct}></Route>\r\n                <About  open = {open} setOpen = {setOpen} />\r\n            </Container>\r\n            </div>\r\n          )\r\n}\r\n","import React ,{useRef,useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport QrReader from 'react-qr-reader';\r\nimport {useBlock} from '../contexts/blockContext';\r\n\r\nimport {\r\n  Typography,\r\n  Paper,\r\n  Grid,\r\n  Button,\r\n  Divider,\r\n  Snackbar,\r\n  TextField,\r\n} from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: \"#05386B !important\",\r\n    display: 'flex',\r\n    height: 224,\r\n    '.MuiBox-root-13':{\r\n        padding:\"0px !important\"\r\n    }\r\n  },\r\n  tabs: {\r\n    borderRight: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  label : {\r\n      color: \"#EDF5E1 !important\"\r\n  },\r\n  notchedOutline: {\r\n      borderWidth: \"2px\",\r\n      borderColor: \"#5cdb95 !important\",\r\n      color:\"#EDF5E1 !important\"\r\n\r\n    },\r\n    input: {\r\n      color:\"#EDF5E1 !important\"\r\n    },\r\n\r\n    divide: {\r\n        backgroundColor: \"#EDF5E1\"\r\n    }\r\n}));\r\n\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\nexport function Scan(props){\r\n  const classes = useStyles();\r\n  const [sopen,setsOpen] = useState(false);\r\n  const [openErr, setOpenErr] = useState(false);\r\n  const [id, setId] = useState();\r\n  const [locat,setLocat] = useState();\r\n  const [address,setAddress] = useState();\r\n  const { updateLocation ,productCount} = useBlock();\r\n    const [err, setErr] = useState(false);\r\n    const qrRef = useRef(5);\r\n\r\n    function handleScan(){\r\n      qrRef.current.openImageDialog();\r\n  }\r\n    async function submitValues(){\r\n      try{\r\n        if(!locat){\r\n          throw({\r\n            message:\"Please Enter Location\"\r\n          })\r\n        }\r\n          if(!id){\r\n            throw({\r\n              message:\"Please Enter Product ID\"\r\n            })\r\n        }\r\n\r\n        if(!address){\r\n          throw({\r\n            message:\"Please Enter new Owner\"\r\n          })\r\n        }\r\n        const check = await productCount(id)\r\n        if(id > check){\r\n          throw({\r\n            message:\"No Product registed with entered ID.\"\r\n          })\r\n        }\r\n      await updateLocation(locat,id,address)\r\n      setsOpen(true);\r\n      }\r\n      catch(error){\r\n        setErr(error.message)\r\n        setOpenErr(true)\r\n      }\r\n    }\r\n  const handleClose = () => {\r\n    setsOpen(false);\r\n    setOpenErr(false);\r\n};\r\n\r\nreturn <div style = {{\r\n  display : \"flex\",\r\n  justifyContent:\"center\"\r\n}}><Paper style = {{\r\n  padding:\"15px 100px 25px 100px\",\r\n  right: \"-50%\",\r\n  alignItems:'center',\r\n  background:\"#05386B\",\r\n  color:\"#EDF5E1\",\r\n  marginTop: \"200px\",\r\n  Width:\"500px\",\r\n}}>\r\n  {sopen &&<Snackbar open={sopen} autoHideDuration={6000} onClose={handleClose}>\r\n                    <Alert onClose={handleClose} severity=\"success\">\r\n                       Location Updated Successfully!!\r\n                    </Alert>\r\n                    </Snackbar>}\r\n                    {openErr &&<Snackbar open={openErr} autoHideDuration={6000} onClose={handleClose}>\r\n                    <Alert onClose={handleClose} severity=\"error\">\r\n                       {err}\r\n                    </Alert>\r\n                    </Snackbar>}\r\n    <Grid container justify = \"center\" style = {{\r\n             marginTop:\"10px\"\r\n         }}>\r\n           <Grid container justify = \"center\">\r\n           <Typography variant = \"h5\" style = {{\r\n                        fontWeight:\"320\",\r\n                    }}>Update Location:</Typography></Grid>\r\n                    <Grid item xs = {12} justify= \"center\" alignItems= \"center\">\r\n                   <Divider className = {classes.divide} style = {{\r\n                       marginBottom:\"40px\"\r\n                   }}></Divider> \r\n                </Grid>\r\n\r\n                <Grid container justify = \"center\" style = {{\r\n         }}>\r\n             <TextField\r\n                    id = \"id\"\r\n                    name = \"id\"\r\n                    label = \"Enter Product ID\"\r\n                    type = \"number\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    InputLabelProps = {{\r\n                       className : classes.label,\r\n                       \r\n                    }}\r\n                    InputProps={{\r\n                        classes: {\r\n                          notchedOutline: classes.notchedOutline,\r\n                          input : classes.input\r\n                        }\r\n                      }}\r\n                      \r\n                       onChange = {(e) => setId(e.target.value)}\r\n                    />\r\n         </Grid>\r\n         <Grid container justify = \"center\" style = {{\r\n         }}>\r\n             <span style = {{marginTop:\"10px\"}}>OR</span>\r\n         </Grid>\r\n\r\n         <Button size = \"small\" onClick = {handleScan}><i class=\"fas fa-qrcode\" style = {{\r\n                    color:\"#EDF5E1\",\r\n                    fontSize:\"15px\"\r\n                }}></i><div style = {{\r\n                    fontSize:\"16px\",\r\n                    color:\"#EDF5E1\",\r\n                    marginLeft:\"2px\",\r\n                }}>Scan QR</div></Button>\r\n           <QrReader\r\n         ref={qrRef}\r\n        delay={300}\r\n        onScan={(result) => {\r\n            try{\r\n            if(!result){\r\n                throw({ message: \"Please Upload a valid image\"})\r\n            }\r\n            setId(result)\r\n        }\r\n        catch(error){\r\n          setErr(error.message)\r\n          setOpenErr(true)}\r\n        }}\r\n        onError = { (error) => { setErr(error.message)\r\n          setOpenErr(true)}}\r\n        legacyMode/>\r\n         </Grid>\r\n\r\n         <Grid container justify = \"center\" style = {{\r\n             marginTop:\"10px\"\r\n         }}>\r\n             <TextField\r\n                    id = \"location\"\r\n                    name = \"location\"\r\n                    label = \"Update Location\"\r\n                    type = \"text\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    InputLabelProps = {{\r\n                       className : classes.label,\r\n                       \r\n                    }}\r\n                    InputProps={{\r\n                        classes: {\r\n                          notchedOutline: classes.notchedOutline,\r\n                          input : classes.input\r\n                        }\r\n                      }}\r\n                       onChange = {(e) => setLocat(e.target.value)}\r\n                      \r\n                    />\r\n         </Grid>\r\n\r\n         <Grid container justify = \"center\" style = {{\r\n             marginTop:\"10px\"\r\n         }}>\r\n             <TextField\r\n                    id = \"address\"\r\n                    name = \"address\"\r\n                    label = \"new Owner\"\r\n                    type = \"text\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    InputLabelProps = {{\r\n                       className : classes.label,\r\n                       \r\n                    }}\r\n                    InputProps={{\r\n                        classes: {\r\n                          notchedOutline: classes.notchedOutline,\r\n                          input : classes.input\r\n                        }\r\n                      }}\r\n                       onChange = {(e) => setAddress(e.target.value)}\r\n                      \r\n                    />\r\n         </Grid>\r\n\r\n         <Grid container justify = \"center\" style = {{\r\n             marginTop:\"20px\"\r\n         }}>\r\n         <Button size = \"small\" style = {{\r\n             background:\"#5cdb95\",\r\n             color: \"#05386B\"\r\n         }} onClick = {submitValues}>Update</Button></Grid></Paper></div>\r\n        }","/*colors scheme #05386B #379683 #5cdb95 #8ee4af #EDF5E1 */\r\n\r\nimport React, {useState} from 'react';\r\nimport {useAuth} from '../contexts/authContext';\r\nimport UpdateProfile from \"../login/updateProfile\";\r\nimport {useHistory, Route} from \"react-router-dom\"; \r\nimport {TrackProduct} from \"./trackProduct\";\r\nimport {Scan} from \"./Scan\" ;\r\nimport \"./navbar.scss\";\r\nimport {About} from \"./about\";\r\nimport {Nav ,Navbar , NavDropdown,Container} from \"react-bootstrap\";\r\n\r\nexport function RetDash(){\r\n\r\n    const [open,setOpen] = useState(false);\r\n    const [icon, setIcon] = useState(true);\r\n    const [Bdr,setBdr] = useState(true);\r\n    const {logout} = useAuth();\r\n    const history = useHistory();\r\n\r\n      const handlelogout = async (e) => {\r\n        await logout().then((user) => {\r\n          history.push('/login')\r\n      }\r\n      )}\r\n\r\n      function handleOpen(){\r\n        setOpen(true)\r\n      }\r\n\r\n    return(<div style = {{\r\n      position:\"absolute\",\r\n        top:\"0\",\r\n        left:\"0\",\r\n        bottom:\"0\",\r\n        right:\"0\",\r\n        height:\"120%\",\r\n        width:\"100%\",\r\n        backgroundColor:\"#5cdb95\"\r\n    }}>\r\n            <Navbar expand =\"lg\" style = {{\r\n              background: \"#8ee4af\",\r\n              overflow:\"visible\",\r\n              borderBottom: Bdr?\"4px solid #05386B\":\"none\",\r\n            }} sticky = \"top\">\r\n              <Navbar.Brand style = {{\r\n                marginLeft: \"50px\",\r\n                color:\"#05386B\",\r\n                fontWeight: \"500\",\r\n                fontSize:\"22px\",\r\n                flexGrow: \"10\"\r\n              }}>\r\n                Supply Chain\r\n              </Navbar.Brand>\r\n              <Navbar.Toggle style = {{\r\n                border:\"none\",\r\n                color: \"#05386B\",\r\n                fontSize:\"25px\"\r\n              }}  onClick = {() => {setIcon(prev => !prev);setBdr(prev => !prev)}}>\r\n                <i class = {icon?\"fa fa-bars\":\"fa fa-times\"} ></i>\r\n              </Navbar.Toggle>\r\n              <Navbar.Collapse>\r\n              <Nav>\r\n              <Nav.Link href=\"./#/home/scanshipment\" >Scan Shipment</Nav.Link>\r\n              <Nav.Link href=\"./#/home/trackproduct\" >Track Product</Nav.Link>\r\n              <Nav.Link onClick = {handleOpen} >About</Nav.Link>\r\n              < NavDropdown title = \"Profile\">\r\n                <NavDropdown.Item href=\"./#/home/profile\">Update Profile</NavDropdown.Item>\r\n                <NavDropdown.Item onClick = {handlelogout} >Logout</NavDropdown.Item>\r\n            </NavDropdown>\r\n              </Nav>\r\n              </Navbar.Collapse>\r\n            </Navbar>\r\n            <Container component=\"main\" fluid>\r\n                <Route path = \"/home/profile\" component = {UpdateProfile}></Route>\r\n                <Route path = \"/home/trackproduct\" component = {TrackProduct}></Route>\r\n                <Route path = \"/home/scanshipment\" component = {Scan}></Route>\r\n                <About open = {open} setOpen = {setOpen}/>\r\n            </Container>\r\n            </div>\r\n          )\r\n}","import React from 'react';\r\nimport {useAuth} from \"./contexts/authContext\";\r\nimport {database} from \"./firebase\";\r\nimport {Redirect, Route } from \"react-router-dom\"\r\nimport {ManuDash} from \"./Dashboards/manuDash\";\r\nimport {BuyerDash} from \"./Dashboards/buyerDash\"\r\nimport { RetDash } from './Dashboards/retailerDash';\r\nimport { useLocalStorage} from \"./hooks/useLocalStorage\"\r\n\r\nexport default function PrivateRoute( {...rest}){\r\n\r\n    const roleRoute = {\r\n        \"manufacturer\": <ManuDash/>,\r\n        \"retailer\": <RetDash/>,\r\n        \"exporter\": <RetDash/>,\r\n        \"importer\": <RetDash/>,\r\n        \"distributer\":<RetDash/>,\r\n        \"buyer\": <BuyerDash/>,\r\n        \"undefined\":<div>Loading..</div>\r\n    \r\n    }\r\n\r\n    const {currentUser} = useAuth() \r\n    const [userRole,setUserRole] = useLocalStorage(\"role\", \" \")\r\n\r\n    async function fetchRole(){\r\n        if(currentUser){\r\n        await database.ref(\"users/\" + currentUser.uid).child(\"role\").get().then(snapshot =>{\r\n            if(snapshot.exists()){\r\n            setUserRole(snapshot.val())}\r\n    })\r\n}\r\n    }\r\n\r\n    React.useEffect(()=>{\r\n        fetchRole()\r\n    },[currentUser,userRole])\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            setUserRole = {setUserRole}\r\n        render = {props => {\r\n            return currentUser ?roleRoute[userRole]: <Redirect to = \"/login\"/>}\r\n        }>    \r\n        </Route>\r\n    )\r\n}","/*colors scheme #05386B #379683 #5cdb95 #8ee4af #EDF5E1 */\r\n\r\nimport React, { useState } from \"react\"\r\nimport { useAuth} from \"../contexts/authContext\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport {\r\n  Typography,\r\n  Paper,\r\n  Link,\r\n  Grid,\r\n  Button,\r\n  MenuItem,\r\n  TextField,\r\n  Divider,\r\n  Snackbar,\r\n  Container\r\n} from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nconst Roles = [\r\n    \"manufacturer\",\r\n    \"exporter\",\r\n    \"importer\",\r\n    \"distributer\",\r\n    \"retailer\",\r\n    \"buyer\"\r\n]\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\nconst validationSchema = yup.object({\r\n\r\n    email: yup\r\n      .string('Enter your email')\r\n      .email('Enter a valid email'),\r\n    password: yup\r\n      .string('Enter your password')\r\n      .min(8, 'Password should be of minimum 8 characters length'),\r\n    passwordConfirmation: yup.string()\r\n      .oneOf([yup.ref('password'), null], 'Passwords must match')\r\n  });\r\n\r\n  const useStyle = makeStyles((theme)=>({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n          margin: theme.spacing(1),\r\n          borderColor: \"#5cdb95 !important\",\r\n          Color: \"#EDF5E1 !important\"\r\n        }},\r\n          input:{\r\n              color:\"#EDF5E1 !important\"\r\n          },\r\n          label:{\r\n            color: \"#EDF5E1 !important\",\r\n            fontSize:\"17px\"\r\n          },\r\n          notchedOutline:{\r\n            borderWidth: \"2px\",\r\n            borderColor: \"#5cdb95 !important\",\r\n            color:\"#EDF5E1 !important\"\r\n          },\r\n          button: {\r\n            backgroundColor: \"#5cdb95\",\r\n            color: \"#05386B\",\r\n            justifySelf:\"center\",\r\n            marginTop: \"20px\",\r\n            marginleft: \"100px\",\r\n            \"&:hover\" :{\r\n                backgroundColor:\"#EDF5E1\"\r\n            }\r\n        },\r\n        divide:{\r\n            background:\"#EDF5E1 !important\"\r\n        }\r\n  }))\r\nexport function Register(props) {\r\n        const { signup} = useAuth()\r\n        const {writeData} = useAuth()\r\n        const style = useStyle()\r\n        const [err,setErr] = useState(0);\r\n        const history = useHistory();\r\n        const [open ,setOpen] = useState(false)\r\n        const [openErr,setOpenErr] = useState(false)\r\n        const formik = useFormik({\r\n            initialValues: {\r\n\r\n            },\r\n            validationSchema: validationSchema,\r\n            onSubmit: submitValues\r\n            })\r\n\r\n            async function submitValues(values){\r\n                try{\r\n                await signup(values.email,values.password).then(async (user) =>{\r\n                    await writeData(values.Username,values.role,user.user.uid,values.address).then((user) => {\r\n                        setOpen(true);\r\n                        history.push(\"./home/trackproduct\")\r\n                    }).catch((error) =>{\r\n                        setErr(error.message)\r\n                    })\r\n                })\r\n            }catch(error){\r\n                setErr(error.message)\r\n                setOpenErr(true)\r\n            }\r\n            }\r\n\r\n            const handleClose = (event, reason) => {\r\n                if (reason === 'clickaway') {\r\n                  return;\r\n                }\r\n            \r\n                setOpen(false)\r\n                setOpenErr(false)\r\n              };\r\n\r\n        return(<div style = {{\r\n            position:\"absolute\",\r\n              top:\"0\",\r\n              left:\"0\",\r\n              bottom:\"0\",\r\n              right:\"0\",\r\n              height:\"100%\",\r\n              width:\"100%\",\r\n              backgroundColor:\"#5cdb95\"\r\n          }}>\r\n        <Container component = \"main\" maxWidth = \"xs\" style = {{\r\n            marginTop:\"60px\"\r\n        }}>\r\n            {open &&<Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                    <Alert onClose={handleClose} severity=\"success\">\r\n                       Profile Created Successfully!!\r\n                    </Alert>\r\n                    </Snackbar>}\r\n                    {openErr &&<Snackbar open={openErr} autoHideDuration={6000} onClose={handleClose}>\r\n                    <Alert onClose={handleClose} severity=\"error\">\r\n                       {err}\r\n                    </Alert>\r\n                    </Snackbar>}\r\n           <Paper\r\n           style = {{\r\n            padding:\"25px\",\r\n            justifyContent:'center',\r\n            alignItems:'center',\r\n            background:\"#05386B\",\r\n            color:\"#EDF5E1\",\r\n            height: \"700px\"\r\n           }}>\r\n               <form onSubmit = {formik.handleSubmit}>\r\n               <Grid container spacing = {2} style = {{\r\n                   MarginTop: \"100px\"\r\n               }}>\r\n                   \r\n                   <Grid container justify = \"center\"  align=\"center\">\r\n                        <Typography variant = \"h2\" style = {{\r\n                            fontSize: \"50px\"\r\n                        }}>Sign Up</Typography></Grid>\r\n\r\n                    <Grid item xs = { 12} >\r\n                    <Divider className = {style.divide} style = {{\r\n                                        marginBottom:\"30px\"}}/>\r\n                    </Grid>\r\n                   <Grid item xs = { 12} justify = \"center\" align=\"center\">\r\n                        <TextField\r\n                    id = \"Username\"\r\n                    name = \"Username\"\r\n                    label = \"User Name\"\r\n                    type = \"text\"\r\n                    variant=\"outlined\"\r\n                    className = {style.textField}\r\n                    InputLabelProps = {{\r\n                       className : style.label,\r\n                       \r\n                    }}\r\n                    InputProps={{\r\n                        classes: {\r\n                          notchedOutline: style.notchedOutline,\r\n                          input : style.input\r\n                        }\r\n                      }}\r\n                      value={formik.values.Username}\r\n                       onChange = {formik.handleChange}\r\n                    />\r\n                   </Grid>\r\n\r\n                   <Grid item xs = {12} justify = \"center\" align=\"center\">\r\n                   <TextField\r\n                    id = \"email\"\r\n                    name = \"email\"\r\n                    label = \"Email\"\r\n                    type = \"text\"\r\n                    variant=\"outlined\"\r\n                    InputLabelProps = {{\r\n                        className : style.label,\r\n                        \r\n                     }}\r\n                     InputProps={{\r\n                         classes: {\r\n                           notchedOutline: style.notchedOutline,\r\n                           input : style.input\r\n                         }\r\n                       }}\r\n                       value={formik.values.email}\r\n                       onChange = {formik.handleChange}\r\n                      error={formik.touched.email && Boolean(formik.errors.email)}\r\n                      helperText={formik.touched.email && formik.errors.email}\r\n                    />\r\n                   </Grid>\r\n\r\n                   <Grid item xs = {12} justify = \"center\" align=\"center\">\r\n                   <TextField\r\n                       id = \"password\"\r\n                       name = \"password\"\r\n                       label = \"password\"\r\n                       variant = \"outlined\"\r\n                       type = \"password\"\r\n                       value={formik.values.password}\r\n                       onChange={formik.handleChange}\r\n                       InputProps = {{\r\n                           classes:{\r\n                                notchedOutline: style.notchedOutline,\r\n                               input:style.input\r\n                           }\r\n                       }}\r\n                       InputLabelProps = {{\r\n                           className: style.label\r\n                       }}\r\n                       error = {formik.touched.password && Boolean(formik.errors.password)}\r\n                       helperText = {formik.touched.password && formik.errors.password}/>\r\n                   </Grid>\r\n\r\n                   <Grid item xs = {12} align=\"center\">\r\n                   <TextField\r\n                       id = \"passwordConfirmation\"\r\n                       name = \"passwordConfirmation\"\r\n                       label = \"Confirm Password\"\r\n                       variant = \"outlined\"\r\n                       type = \"password\"\r\n                       value={formik.values.passwordConfirmation}\r\n                       onChange={formik.handleChange}\r\n                       InputProps = {{\r\n                           classes:{\r\n                                notchedOutline: style.notchedOutline,\r\n                               input:style.input\r\n                           }\r\n                       }}\r\n                       InputLabelProps = {{\r\n                           className: style.label\r\n                       }}\r\n                       error = {formik.touched.passwordConfirmation && Boolean(formik.errors.passwordConfirmation)}\r\n                       helperText = {formik.touched.passwordConfirmation && formik.errors.passwordConfirmation}></TextField>\r\n                   </Grid>\r\n\r\n                   <Grid item xs = {12} align=\"center\">\r\n                   <TextField\r\n                       id = \"address\"\r\n                       name = \"address\"\r\n                       label = \"Wallet Address\"\r\n                       variant = \"outlined\"\r\n                       type = \"text\"\r\n                       value={formik.values.address}\r\n                       onChange={formik.handleChange}\r\n                       InputProps = {{\r\n                           classes:{\r\n                                notchedOutline: style.notchedOutline,\r\n                               input:style.input\r\n                           }\r\n                       }}\r\n                       InputLabelProps = {{\r\n                           className: style.label\r\n                       }}\r\n                      ></TextField>\r\n                   </Grid>\r\n\r\n                   <Grid item xs = {12}>\r\n                   <TextField\r\n                   fullWidth\r\n                   select\r\n                      id = \"role\"\r\n                       name = \"role\"\r\n                       label = \"Select your Role\"\r\n                       variant = \"outlined\"\r\n                       onChange={formik.handleChange}\r\n                       InputProps = {{\r\n                           classes:{\r\n                                notchedOutline: style.notchedOutline,\r\n                               input:style.input\r\n                           }\r\n                       }}\r\n                       InputLabelProps = {{\r\n                           className: style.label\r\n                       }}\r\n\r\n                       >{Roles.map( (role , index)=>(\r\n                    <MenuItem value={role} key = {index}>{role}</MenuItem>\r\n                      ))}</TextField>\r\n                   </Grid>\r\n\r\n                   <Grid container xs = {12} justify = \"center\">\r\n                       <Button type = \"submit\" className = {style.button} size = \"large\">Signup</Button>\r\n                       </Grid>\r\n\r\n                       <Grid container xs = {12} justify = \"center\">\r\n                       <Link href=\"#/login\" variant=\"body2\" style = {{\r\n                           paddingTop: \"20px\",\r\n                           color:\"#EDF5E1\",\r\n                           fontSize:\"16px\"\r\n                       }} underline = \"hover\">\r\n                Already have an account? Login\r\n              </Link>\r\n                       </Grid>\r\n               </Grid>\r\n               </form>\r\n           </Paper>\r\n           </Container>\r\n           </div>\r\n        ) \r\n    }\r\n","/*colors scheme #05386B #379683 #5cdb95 #8ee4af #EDF5E1 */\r\n\r\nimport React, {useState } from \"react\"\r\nimport { useAuth} from \"../contexts/authContext\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport {\r\n  Typography,\r\n  Paper,\r\n  Link,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  Divider,\r\n  Snackbar,\r\n  Container\r\n} from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\nconst validationSchema = yup.object({\r\n\r\n    email: yup\r\n      .string('Enter your email')\r\n      .email('Enter a valid email'),\r\n    password: yup\r\n      .string('Enter your password')\r\n      .min(8, 'Password should be of minimum 8 characters length'),\r\n  });\r\n\r\n  const useStyle = makeStyles((theme)=>({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n          margin: theme.spacing(1),\r\n          borderColor: \"#5cdb95 !important\",\r\n          Color: \"#EDF5E1 !important\"\r\n        }},\r\n          input:{\r\n              color:\"#EDF5E1 !important\"\r\n          },\r\n          label:{\r\n            color: \"#EDF5E1 !important\",\r\n            fontSize:\"17px\"\r\n          },\r\n          notchedOutline:{\r\n            borderWidth: \"2px\",\r\n            borderColor: \"#5cdb95 !important\",\r\n            color:\"#EDF5E1 !important\"\r\n          },\r\n          button: {\r\n            backgroundColor: \"#5cdb95\",\r\n            color: \"#05386B\",\r\n            justifySelf:\"center\",\r\n            marginTop: \"20px\",\r\n            marginleft: \"100px\",\r\n            \"&:hover\" :{\r\n                backgroundColor:\"#EDF5E1\"\r\n            }\r\n        },\r\n        divide:{\r\n            background:\"#EDF5E1 !important\",\r\n        }\r\n  }))\r\nexport function Login() {\r\n\r\n    const {login} = useAuth()\r\n    const history = useHistory()\r\n    const [err,setErr] = useState()\r\n    const [open ,setOpen] = useState(false)\r\n    const [openErr,setOpenErr] = useState(false)\r\n    const style = useStyle()\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n\r\n        },\r\n        validationSchema: validationSchema,\r\n        onSubmit: handleLogin\r\n        })\r\n\r\n    async function handleLogin(values) {\r\n\r\n        try{\r\n        await login(values.email,values.password)\r\n             setErr(0) \r\n            history.push(\"./home/trackproduct\")\r\n            setOpen(true)\r\n        }\r\n        catch(error){\r\n                setErr(error.message)\r\n                setOpenErr(true)\r\n            }\r\n        }\r\n\r\n        const handleClose = (event, reason) => {\r\n            if (reason === 'clickaway') {\r\n              return;\r\n            }\r\n            setOpen(false)\r\n            setOpenErr(false)\r\n        }\r\n\r\n        return (<div style = {{\r\n          position:\"absolute\",\r\n            top:\"0\",\r\n            left:\"0\",\r\n            bottom:\"0\",\r\n            right:\"0\",\r\n            height:\"100%\",\r\n            width:\"100%\",\r\n            backgroundColor:\"#5cdb95\"\r\n        }}><Container maxWidth = \"xs\" style = {{ marginTop: \"100px\"}}>\r\n        {open &&<Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"success\">\r\n                  Login Successfully!!\r\n                </Alert>\r\n                </Snackbar>}\r\n                {<Snackbar open={openErr} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"error\">\r\n                   {err}\r\n                </Alert>\r\n                </Snackbar>}\r\n       <Paper\r\n       style = {{\r\n        padding:\"20px\",\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n        background:\"#05386B\",\r\n        color:\"#EDF5E1\",\r\n        height: \"540px\"\r\n       }}>\r\n           <form onSubmit = {formik.handleSubmit}>\r\n           <Grid container spacing = {2} style = {{\r\n               MarginTop: \"100px\"\r\n           }}>\r\n               \r\n               <Grid container justify = \"center\"  align=\"center\">\r\n                    <Typography variant = \"h2\" style = {{\r\n                        fontSize: \"50px\"\r\n                    }}>Login</Typography></Grid>\r\n\r\n                <Grid item xs = {12} justify = \"center\" align=\"center\" >\r\n                <Divider className = {style.divide} />\r\n                </Grid>\r\n\r\n                <Grid item xs = {12}  justify = \"center\" align=\"center\" style = {{\r\n                    fontSize: \"70px\",\r\n                }}>\r\n                <i class=\"fas fa-sign-in-alt\" ></i>\r\n                </Grid>\r\n\r\n               <Grid item xs = {12} justify = \"center\" align=\"center\">\r\n               <TextField\r\n                id = \"email\"\r\n                name = \"email\"\r\n                label = \"Email\"\r\n                type = \"text\"\r\n                variant=\"outlined\"\r\n                InputLabelProps = {{\r\n                    className : style.label,\r\n                    \r\n                 }}\r\n                 InputProps={{\r\n                     classes: {\r\n                       notchedOutline: style.notchedOutline,\r\n                       input : style.input\r\n                     }\r\n                   }}\r\n                   value={formik.values.email}\r\n                   onChange = {formik.handleChange}\r\n                  error={formik.touched.email && Boolean(formik.errors.email)}\r\n                  helperText={formik.touched.email && formik.errors.email}\r\n                />\r\n               </Grid>\r\n\r\n               <Grid item xs = {12} justify = \"center\" align=\"center\">\r\n               <TextField\r\n                   id = \"password\"\r\n                   name = \"password\"\r\n                   label = \"password\"\r\n                   variant = \"outlined\"\r\n                   type = \"password\"\r\n                   value={formik.values.password}\r\n                   onChange={formik.handleChange}\r\n                   InputProps = {{\r\n                       classes:{\r\n                            notchedOutline: style.notchedOutline,\r\n                           input:style.input\r\n                       }\r\n                   }}\r\n                   InputLabelProps = {{\r\n                       className: style.label\r\n                   }}\r\n                   error = {formik.touched.password && Boolean(formik.errors.password)}\r\n                   helperText = {formik.touched.password && formik.errors.password}/>\r\n               </Grid>\r\n\r\n\r\n               <Grid container xs = {12} justify = \"center\">\r\n                   <Button type = \"submit\" className = {style.button} size = \"large\" >Login</Button>\r\n                   </Grid>\r\n\r\n                   <Grid container xs = {12} justify = \"center\">\r\n                   <Link href=\"./#/signup\" variant=\"body2\" style = {{\r\n                       paddingTop: \"20px\",\r\n                       color:\"#EDF5E1\",\r\n                       fontSize:\"16px\"\r\n                   }} underline = \"hover\">\r\n            Don't have an account? Sign Up\r\n          </Link>\r\n                   </Grid>\r\n           </Grid>\r\n           </form>\r\n       </Paper>\r\n       </Container>\r\n       </div>)\r\n\r\n}","import React  from \"react\";\nimport {Redirect, Route, Switch} from \"react-router-dom\"\nimport PrivateRoute from \"./PrivateRoute\";\nimport {Register } from \"./login/register\";\nimport {Login} from \"./login/login\";\n\n function App(){\n\n\n    return (\n      <div>\n        <Switch>\n          {/*Dashboard*/}\n          <Redirect path = \"/\" to = \"/home\" exact/>\n          <Redirect push path = \"/home\" to = \"/home/trackproduct\" exact/>\n          <PrivateRoute path = \"/home\"/>\n\n        {/*Auth Route*/}\n         <Route component = {Register} path = \"/signup\"/>\n         <Route component = {Login} path = \"/login\" />\n        </Switch>\n        </div>\n    );\n  }\n\n  export default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './components/App';\nimport {AuthProvider} from \"./components/contexts/authContext\";\nimport {BlockProvider} from \"./components/contexts/blockContext\";\nimport {HashRouter} from \"react-router-dom\";\n\nReactDOM.render( <HashRouter>\n<BlockProvider>\n<AuthProvider>\n<App />\n</AuthProvider>\n</BlockProvider>\n</HashRouter>,\n     document.getElementById('root'));\n\n"],"sourceRoot":""}