{"version":3,"sources":["components/firebase.js","components/contexts/authContext.jsx","components/hooks/useLocalStorage.jsx","components/login/updateProfile.jsx","components/contexts/blockContext.jsx","components/Dashboards/trackProduct.jsx","components/Dashboards/addProduct.jsx","components/Dashboards/about.jsx","components/Dashboards/manuDash.jsx","components/Dashboards/buyerDash.jsx","components/Dashboards/Scan.jsx","components/Dashboards/retailerDash.jsx","components/PrivateRoute.jsx","components/login/register.jsx","components/contexts/instructions.jsx","components/login/login.jsx","components/App.jsx","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebase","initializeApp","auth","database","authContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","userName","role","id","address","a","ref","set","username","waddress","update","caddress","remove","child","get","then","snapshot","name","exists","val","useEffect","onAuthStateChanged","user","value","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","signOut","writeData","updatemail","updateEmail","updatePass","pass","updatePassword","updateRoleInBase","updateUserInBase","updateAddressInBase","addressToName","Provider","useLocalStorage","key","initialValue","JSON","parse","localStorage","getItem","Function","getSavedValue","setValue","setItem","stringify","validationSchema","yup","min","passwordConfirmation","oneOf","Alert","props","elevation","variant","Roles","useStyles","makeStyles","theme","root","margin","spacing","borderColor","Color","select","color","label","notchedOutline","borderWidth","input","button","backgroundColor","justifySelf","marginTop","marginleft","divide","background","UpdateProfile","style","setUserRole","isPass","setisPass","isUser","setisUser","isAddr","setisAddr","isEmail","setisEmail","isRole","setisRole","err","setErr","open","setOpen","openErr","setOpenErr","CUserName","setCUserName","CAddr","setCAddr","Crole","setCrole","promises","formik","useFormik","initialValues","Username","onSubmit","values","push","Role","uid","window","location","reload","Promise","all","catch","error","message","dbRef","handleClose","event","reason","handleSubmit","justifyContent","display","Paper","padding","right","alignItems","maxWidth","maxHeight","float","Snackbar","autoHideDuration","onClose","severity","Grid","container","justify","Typography","fontSize","items","xs","Divider","className","marginBottom","item","TextField","type","size","textField","InputLabelProps","InputProps","classes","onChange","handleChange","varient","class","onClick","prev","paddingLeft","touched","Boolean","errors","helperText","wordWrap","fullWidth","map","index","MenuItem","direction","Button","blockContext","useBlock","BlockProvider","account","setAccount","supplyChain","setsupplyChain","setIsMetamask","setWeb3","history","useHistory","ethereum","web3","Web3","enable","currentProvider","alert","eth","getAccounts","accounts","net","getId","networkId","console","log","networkData","supply","networks","Contract","abi","transactionConfirmationBlocks","gasPrice","chain","loadWeb3","loadBlockChainData","on","off","addProduct","methods","send","from","productCount","call","updateLocation","changeLocation","trackProduct","fetchInfo","fetchOwner","fetchAddress","fetchLocations","fetchAllLocation","fontWeight","border","height","Transition","forwardRef","Slide","FetchLocation","LocDisp","orientation","Dialog","TransitionComponent","keepMounted","aria-labelledby","aria-describedby","PaperProps","DialogTitle","DialogContent","locations","DialogActions","TrackProduct","setId","setName","date","setDate","cLoc","setCLoc","owner","setOwner","setLocations","qrRef","useRef","current","openImageDialog","handleFetchInfo","dataRaw","Address","Locations","data","split","ownerRaw","temp","Date","dat","getDate","month","getMonth","year","getFullYear","transform","Container","placeholder","disableUnderline","inputProps","e","target","borderLeft","cursor","marginLeft","delay","onScan","result","onError","legacyMode","Box","width","borderRadius","boxShadow","row","TabPanel","other","hidden","a11yProps","flexGrow","tabs","borderRight","palette","divider","VerticalTabs","locat","setLocat","setAddress","pc","check","uloc","setsOpen","addPro","handleClickOpen","Tabs","newValue","aria-label","Tab","paddingTop","required","paddingBottom","GenQR","DialogContentText","flexDirection","href","image","download","src","alt","AddProduct","sopen","imageUrl","setImageUrl","setPc","prod","QRCode","toDataURL","toString","dark","light","scale","response","About","dividers","gutterBottom","autoFocus","ManuDash","icon","setIcon","handlelogout","Navbar","expand","overflow","borderBottom","sticky","collapseOnSelect","Brand","Toggle","Collapse","Nav","onSelect","Link","NavDropdown","title","Item","component","path","BuyerDash","position","top","left","bottom","fluid","Scan","Width","RetDash","PrivateRoute","rest","roleRoute","userRole","fetchRole","render","to","useStyle","Register","MarginTop","align","underline","Instructions","justiftyContent","gap","Login","App","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d896ffc9.chunk.js","sourcesContent":["import firebase from \"firebase/app\"\r\nimport \"firebase/auth\"\r\nimport \"firebase/database\"\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n  }; \r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n  export const auth = firebase.auth()\r\n  export default firebaseConfig;\r\n\r\n  export const database = firebase.database()","import React, {useContext, useEffect, useState } from 'react';\r\nimport {auth} from \"../firebase\";\r\nimport {database} from \"../firebase\";\r\nconst authContext = React.createContext();\r\n\r\n\r\nexport function useAuth(){\r\n    return useContext(authContext)\r\n}\r\nexport function AuthProvider({children}) {\r\n\r\n    const [currentUser,setCurrentUser] = useState();\r\n   const [loading,setLoading] = useState(true);\r\n\r\n    function signup( email,password){\r\n        return auth.createUserWithEmailAndPassword(email,password);\r\n    }\r\n\r\n    function login( email,password){\r\n        return auth.signInWithEmailAndPassword(email,password);\r\n    }\r\n\r\n    function logout() {\r\n        return auth.signOut()\r\n    }\r\n\r\n    async function writeData(userName , role, id,address) {\r\n\r\n        await database.ref(\"owners/\" + address).set({\r\n            username:userName\r\n        })\r\n        return database.ref( \"users/\" + id).set({\r\n            username: userName,\r\n            role: role,\r\n            waddress: address\r\n        })\r\n    }\r\n\r\n    function updateRoleInBase(role , id) {\r\n        return database.ref(\"users/\" + id).update({\r\n            role:role,\r\n        })\r\n    }\r\n\r\n    async function updateUserInBase(userName, id ,address) {\r\n\r\n    await database.ref( \"owners/\" + address).set({\r\n            username:userName\r\n        }) \r\n        return database.ref(\"users/\" + id).update({\r\n            username:userName\r\n        })\r\n    }\r\n\r\n    async function updateAddressInBase(userName ,caddress ,address ,id) {\r\n\r\n        await database.ref(\"owners/\" + caddress).remove()\r\n        if(userName){\r\n        await database.ref(\"owners/\" + address).set({\r\n            username: userName\r\n        }) \r\n    }\r\n        return database.ref(\"users/\" + id).update({\r\n           waddress:address\r\n        }) \r\n\r\n    }\r\n\r\n    async function addressToName(address){\r\n        let name\r\n        await database.ref(\"owners/\" + address).child(\"username\").get().then(snapshot =>{\r\n            if(snapshot.exists()){\r\n            name = snapshot.val()}\r\n        else {\r\n            name = address\r\n        }})\r\n        return name\r\n    }\r\n    function updatemail(email) {\r\n        return currentUser.updateEmail(email)\r\n   }\r\n   function updatePass(pass) {\r\n\r\n       return currentUser.updatePassword(pass)\r\n   }\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged( user => {\r\n            setCurrentUser(user)\r\n            setLoading(false)\r\n        } )\r\n        return unsubscribe\r\n    },[])\r\n\r\n    const value = {\r\n        currentUser,\r\n        signup,\r\n        login,\r\n        logout,\r\n        writeData,\r\n        updatemail,\r\n        updatePass,\r\n        updateRoleInBase,\r\n        updateUserInBase,\r\n        updateAddressInBase,\r\n        addressToName,\r\n    }\r\n    return(<authContext.Provider value = {value}>\r\n        {loading?<span>Loading...</span>:children}\r\n    </authContext.Provider>)\r\n}","import {useEffect,useState} from \"react\";\r\n\r\n\r\nfunction getSavedValue(key, initialValue){\r\n    const savedValue = JSON.parse(localStorage.getItem(key))\r\n    if(savedValue) return savedValue\r\n\r\n    if( initialValue instanceof Function) return initialValue()\r\n\r\n    return initialValue\r\n}\r\n\r\nexport function useLocalStorage(key , initialValue){\r\n\r\n    const [value,setValue] = useState(() =>{\r\n        return getSavedValue(key,initialValue)\r\n    })\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(key,JSON.stringify(value))\r\n    },[value])\r\n\r\n    return [value,setValue]\r\n}","/*colors scheme #05386B #379683 #5cdb95 #8ee4af #EDF5E1 */\r\n\r\nimport React, {useState } from \"react\"\r\nimport { useAuth} from \"../contexts/authContext\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {database} from \"../firebase\";\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { useLocalStorage} from \"../hooks/useLocalStorage\"\r\nimport {\r\n  Typography,\r\n  Paper,\r\n  Grid,\r\n  Button,\r\n  MenuItem,\r\n  TextField,\r\n  Divider,\r\n  Snackbar,\r\n} from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nconst validationSchema = yup.object({\r\n\r\n    email: yup\r\n      .string('Enter your email')\r\n      .email('Enter a valid email'),\r\n    password: yup\r\n      .string('Enter your password')\r\n      .min(8, 'Password should be of minimum 8 characters length'),\r\n    passwordConfirmation: yup.string()\r\n      .oneOf([yup.ref('password'), null], 'Passwords must match')\r\n  });\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\nconst Roles = [\r\n    \"manufacturer\",\r\n    \"exporter\",\r\n    \"importer\",\r\n    \"distributer\",\r\n    \"retailer\",\r\n    \"buyer\"\r\n]\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n          margin: theme.spacing(1),\r\n          borderColor: \"#5cdb95 !important\",\r\n          Color: \"#EDF5E1 !important\"\r\n        }},\r\n    select: {\r\n        color:\"#EDF5E1 !important\"\r\n    },\r\n    label : {\r\n        color: \"#EDF5E1 !important\"\r\n    },\r\n    notchedOutline: {\r\n        borderWidth: \"2px\",\r\n        borderColor: \"#5cdb95 !important\",\r\n        color:\"#EDF5E1 !important\"\r\n\r\n      },\r\n      input: {\r\n        color:\"#EDF5E1 !important\"\r\n      },\r\n\r\n      button: {\r\n          backgroundColor: \"#5cdb95\",\r\n          color: \"#05386B\",\r\n          justifySelf:\"center\",\r\n          marginTop: \"20px\",\r\n          marginleft: \"100px\",\r\n          \"&:hover\" :{\r\n              backgroundColor:\"#EDF5E1\"\r\n          }\r\n      },\r\n\r\n      divide: {\r\n          background: \"#EDF5E1 !important\",\r\n      }\r\n}))\r\n\r\n\r\nexport default  function UpdateProfile(props) {\r\n        const { updatemail , updateRoleInBase,updatePass,currentUser , updateUserInBase ,updateAddressInBase} = useAuth()\r\n        const style = useStyles()\r\n        const [userRole,setUserRole] = useLocalStorage(\"role\", \" \")\r\n        const [isPass,setisPass] = useState(false)\r\n        const [isUser,setisUser] = useState(false)\r\n        const [isAddr,setisAddr] = useState(false)\r\n        const [isEmail,setisEmail] = useState(false)\r\n        const [isRole,setisRole] = useState(false)\r\n        const [err,setErr] = useState(0);\r\n        const [open ,setOpen] = useState(false)\r\n        const [openErr,setOpenErr] = useState(false)\r\n        const [CUserName , setCUserName] = useState(\"Loading..\")\r\n        const [CAddr , setCAddr] = useState(\"Loading..\")\r\n        const [Crole,setCrole] = useState(\"Loading...\")\r\n        const promises = []\r\n\r\n\r\n        function submitValues(values){\r\n            if(values.email !== currentUser.email && values.email) {\r\n                promises.push(updatemail(values.email))\r\n            }\r\n    \r\n            if (values.password){\r\n                promises.push(updatePass(values.password))\r\n            }\r\n    \r\n            if(values.Role){\r\n                promises.push(updateRoleInBase(values.Role,currentUser.uid))\r\n                setUserRole(values.Role)\r\n                window.location.reload();\r\n            }\r\n\r\n            if(values.address){\r\n                promises.push(updateAddressInBase((values.Username ?null:CUserName),CAddr,values.address , currentUser.uid))\r\n            }\r\n\r\n            if(values.Username){\r\n                promises.push(updateUserInBase(values.Username,currentUser.uid,(values.address ?values.address:CAddr)))\r\n            }\r\n            \r\n            Promise.all(promises).then(() => {\r\n                setOpen(true);\r\n                setisUser(false);\r\n                setisEmail(false);\r\n                setisPass(false);\r\n                setisRole(false);\r\n                setisAddr(false);\r\n\r\n            }).catch((error) => {\r\n                setErr(error.message)\r\n                setOpenErr(true)\r\n            })\r\n        \r\n    }\r\n        const formik = useFormik({\r\n            initialValues: {\r\n                Username:'',\r\n                email: '',\r\n                password: '',\r\n                passwordConfirmation: '',\r\n              },\r\n            validationSchema: validationSchema,\r\n            onSubmit: submitValues\r\n            })\r\n    const dbRef = database.ref();\r\n\r\n        if(currentUser){\r\n            dbRef.child(\"users\").child(currentUser.uid).get().then((snapshot) => {\r\n            if(snapshot.exists()){\r\n                setCUserName(snapshot.val().username ? snapshot.val().username : \"no User Name\")\r\n                setCrole(snapshot.val().role ? snapshot.val().role : \"no Role found\")\r\n                setCAddr(snapshot.val().waddress ? snapshot.val().waddress : \"no address found\")\r\n            }else {\r\n                setErr(\"error loading data\")\r\n                setOpenErr(true)\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n    \r\n        setOpen(false)\r\n        setOpenErr(false)\r\n      };\r\n\r\n    function showUser() {\r\n        setisUser((prev) => !prev)\r\n    }\r\n    function showEmail(){\r\n        setisEmail((prev) => !prev)\r\n    }\r\n    function showPass(){\r\n        setisPass((prev) => !prev)\r\n    }\r\n\r\n    function showRole(){\r\n        setisRole((prev) => !prev)\r\n    }\r\n\r\n    function showAddr(){\r\n        setisAddr((prev) => !prev)\r\n    }\r\n\r\n\r\n        return (\r\n            <form onSubmit={formik.handleSubmit} style = {{\r\n                justifyContent:\"center\",\r\n                display:\"flex\",\r\n                marginTop:\"150px\"\r\n            }}>\r\n            <Paper style = {{\r\n                padding:\"20px\",\r\n\r\n                right: \"-50%\",\r\n                justifySelf:'center',\r\n                alignItems:'center',\r\n                background:\"#05386B\",\r\n                color:\"#EDF5E1\",\r\n                maxWidth:\"450px\",\r\n                maxHeight:\"500px\",\r\n                float:\"center\"\r\n            }}>\r\n                {open &&<Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                    <Alert onClose={handleClose} severity=\"success\">\r\n                       Profile Updated Successfully!!\r\n                    </Alert>\r\n                    </Snackbar>}\r\n                    {openErr &&<Snackbar open={openErr} autoHideDuration={6000} onClose={handleClose}>\r\n                    <Alert onClose={handleClose} severity=\"error\">\r\n                       {err}\r\n                    </Alert>\r\n                    </Snackbar>}\r\n                <Grid  container spacing = {3}>\r\n\r\n                    <Grid container justify = \"center\" alignItems =\"center\">\r\n                        <Typography variant = \"h2\" style = {{\r\n                            fontSize: \"50px\"\r\n                        }}>Profile</Typography>\r\n                    </Grid>\r\n                    <Grid items xs = {12}>\r\n                    <Divider className = {style.divide} style = {{\r\n                    marginBottom:\"30px\"}}/>\r\n                    </Grid>\r\n                    <Grid item xs = {6}>\r\n                    {isUser?\r\n                        <TextField\r\n                    id = \"Username\"\r\n                    name = \"Username\"\r\n                    label = \"User Name\"\r\n                    type = \"text\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    className = {style.textField}\r\n                    InputLabelProps = {{\r\n                       className : style.label,\r\n                       \r\n                    }}\r\n                    InputProps={{\r\n                        classes: {\r\n                          notchedOutline: style.notchedOutline,\r\n                          input : style.input\r\n                        }\r\n                      }}\r\n                      value={formik.values.Username}\r\n                       onChange = {formik.handleChange}\r\n                    />:<Typography varient = \"h4\">{CUserName}</Typography>}\r\n                    </Grid>\r\n                    <Grid item xs = {6}>\r\n                        <i class=\"fas fa-pencil-alt\" onClick ={showUser} style = {{paddingLeft: \"100px\"}}></i>\r\n                    </Grid>\r\n\r\n\r\n                    <Grid item xs = {6}>\r\n                    {isEmail?<TextField\r\n                    id = \"email\"\r\n                    name = \"email\"\r\n                    label = \"Email\"\r\n                    type = \"text\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    InputLabelProps = {{\r\n                        className : style.label,\r\n                        \r\n                     }}\r\n                     InputProps={{\r\n                         classes: {\r\n                           notchedOutline: style.notchedOutline,\r\n                           input : style.input\r\n                         }\r\n                       }}\r\n                       value={formik.values.email}\r\n                       onChange = {formik.handleChange}\r\n                      error={formik.touched.email && Boolean(formik.errors.email)}\r\n                      helperText={formik.touched.email && formik.errors.email}\r\n                    />:<Typography varient = \"h4\">{currentUser.email}</Typography>}\r\n                    </Grid>\r\n                    <Grid item xs = {6}>\r\n                        <i class=\"fas fa-pencil-alt\" onClick ={showEmail} style = {{paddingLeft: \"100px\"}}></i>\r\n                    </Grid>\r\n                       \r\n                    <Grid item xs = {6}>\r\n                            {isPass?<TextField\r\n                            id = \"password\"\r\n                            name = \"password\"\r\n                            label = \"Password\"\r\n                            type = \"password\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            color = \"primary\"\r\n                            InputLabelProps = {{\r\n                                className : style.label,\r\n                                \r\n                             }}\r\n                             InputProps={{\r\n                                 classes: {\r\n                                   notchedOutline: style.notchedOutline,\r\n                                   input : style.input\r\n                                 },\r\n                                 color: \"#EDF5E1 !important\"\r\n                               }}\r\n                      value={formik.values.password}\r\n                      onChange={formik.handleChange}\r\n                      error={formik.touched.password && Boolean(formik.errors.password)}\r\n                      helperText={formik.touched.password && formik.errors.password}\r\n                            />:<Typography varient = \"h4\">Password</Typography>}\r\n                    </Grid>\r\n                    <Grid item xs = {6}>\r\n                            <i class=\"fas fa-pencil-alt\" onClick ={showPass}\r\n                           style = {{paddingLeft: \"100px\"}}></i>\r\n                    </Grid>\r\n\r\n\r\n                            {isPass?<><Grid item xs = {6}><TextField\r\n                            id = \"passwordConfirmation\"\r\n                            name = \"passwordConfirmation\"\r\n                            label = \"Confirm Password\"\r\n                            type = \"password\"\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            InputLabelProps = {{\r\n                                className : style.label,\r\n                                \r\n                             }}\r\n                             InputProps={{\r\n                                 classes: {\r\n                                   notchedOutline: style.notchedOutline,\r\n                                   input : style.input\r\n                                 }\r\n                               }}\r\n                               value={formik.values.passwordConfirmation}\r\n                               onChange={formik.handleChange}\r\n                               error={formik.touched.passwordConfirmation && Boolean(formik.errors.passwordConfirmation)}\r\n                               helperText={formik.touched.passwordConfirmation && formik.errors.passwordConfirmation}/></Grid><Grid item xs = {6}>\r\n                           </Grid></>:null}\r\n\r\n                           <Grid item xs = {6}>\r\n                               {isAddr?<TextField\r\n                                id = \"address\"\r\n                                name = \"address\"\r\n                                label = \"Wallet Address\"\r\n                                variant = \"outlined\"\r\n                                type = \"text\"\r\n                                value={formik.values.address}\r\n                                onChange={formik.handleChange}\r\n                                InputProps = {{\r\n                                    classes:{\r\n                                            notchedOutline: style.notchedOutline,\r\n                                        input:style.input\r\n                                    }\r\n                                }}\r\n                                InputLabelProps = {{\r\n                                    className: style.label\r\n                                }}\r\n                      ></TextField>\r\n                        :\r\n                            <Typography style={{ wordWrap: 'break-word' }}varient = \"h4\">\r\n                                Wallet Address</Typography>} </Grid>\r\n                        <Grid item xs = {6}>\r\n                        <i class=\"fas fa-pencil-alt\" onClick ={showAddr}\r\n                       style = {{paddingLeft: \"100px\"}}></i>\r\n                </Grid>\r\n\r\n                    <Grid item xs={6}>\r\n                  {isRole?<TextField\r\n\r\n                    id = \"Role\"\r\n                    name = \"Role\"\r\n                    fullWidth\r\n                    select\r\n                    variant = \"outlined\"\r\n                    label=\"Select Role:\"\r\n                    className = {style.select}\r\n                    InputLabelProps = {{\r\n                        className : style.label,\r\n                        \r\n                     }}\r\n                     InputProps={{\r\n                         classes: {\r\n                           notchedOutline: style.notchedOutline,\r\n                           input : style.input\r\n                         }\r\n                        }}\r\n                        value={formik.values.Role}\r\n                        onChange={formik.handleChange}\r\n                  >\r\n                      {Roles.map( (role , index)=>(\r\n                    <MenuItem value={role} key = {index}>{role}</MenuItem>\r\n                      ))}\r\n               </TextField>:<Typography varient = \"h4\">{Crole}</Typography>}\r\n                </Grid>\r\n\r\n                <Grid item xs = {6}>\r\n                        <i class=\"fas fa-pencil-alt\" onClick ={showRole} style = {{paddingLeft: \"100px\"}}></i>\r\n                    </Grid>\r\n\r\n                    </Grid>\r\n                    <Grid container\r\n                        direction=\"row\"\r\n                        justify=\"center\"\r\n                        alignItems=\"center\">\r\n                    <Button className = {style.button}  type = \"submit\">Update</Button>\r\n                    </Grid>\r\n            </Paper>\r\n            </form>\r\n        )\r\n    }\r\n","import React,{useContext, useEffect, useState } from \"react\";\r\nimport Web3 from \"web3\";\r\nimport supply from '../../abis/supplyChain.json'\r\nimport {Redirect ,useHistory} from \"react-router-dom\"\r\n\r\nconst blockContext  = React.createContext();\r\n\r\n\r\nexport function useBlock(){\r\n    return useContext(blockContext);\r\n}\r\n\r\nexport function BlockProvider({children}){\r\n    const [account , setAccount] = useState();\r\n    const [supplyChain ,setsupplyChain] = useState();\r\n    const [isMetamask, setIsMetamask] = useState(false);\r\n    const [web3,setWeb3] = useState();\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n         loadWeb3()\r\n         if(window.ethereum){\r\n       loadBlockChainData()\r\n       window.ethereum.on('accountsChanged', function (accounts) {\r\n       setAccount(accounts[0])\r\n      })\r\n      return window.ethereum.off\r\n    }\r\n    },[])\r\n\r\n    async function loadWeb3() {\r\n        if (window.ethereum) {\r\n          setIsMetamask(true)\r\n        window.web3 = new Web3(window.ethereum)\r\n          await window.ethereum.enable()\r\n        }\r\n        else if (window.web3) {\r\n          setIsMetamask(true)\r\n        window.web3 = new Web3(window.web3.currentProvider)\r\n        }\r\n        else {\r\n          history.push(\"/instructions\")\r\n          window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\r\n          \r\n        }\r\n      }\r\n\r\n      async function loadBlockChainData(){\r\n\r\n          const web3 = window.web3\r\n          setWeb3(web3)\r\n          const accounts = await web3.eth.getAccounts()\r\n          setAccount(accounts[0])\r\n          const networkId = await web3.eth.net.getId()\r\n          console.log(networkId)\r\n          const networkData = supply.networks[networkId]\r\n          const chain = await new web3.eth.Contract(supply.abi,networkData.address,{ transactionConfirmationBlocks: 1,gasPrice :200000000000})\r\n            setsupplyChain(chain)\r\n            console.log(chain)\r\n      }\r\n\r\n      function addProduct(name){\r\n        return supplyChain.methods.addProduct(name).send({from : account})\r\n      }\r\n\r\n      function updateLocation(location ,id,address){\r\n        return supplyChain.methods.changeLocation(location,id,address).send({from : account})\r\n      } \r\n\r\n      function trackProduct(id){\r\n        return supplyChain.methods.fetchInfo(id).call()\r\n      }\r\n      function productCount(){\r\n        return supplyChain.methods.productCount().call()\r\n      }\r\n\r\n      function fetchOwner(id){\r\n        return supplyChain.methods.fetchAddress(id).call()\r\n      }\r\n\r\n      function fetchLocations(id){\r\n        return supplyChain.methods.fetchAllLocation(id).call()\r\n      }\r\n      const value = {\r\n          addProduct,\r\n          account,\r\n          productCount,\r\n          updateLocation,\r\n          trackProduct,\r\n          fetchOwner,\r\n          fetchLocations\r\n\r\n      }\r\n      return(\r\n          <blockContext.Provider value = {value}>\r\n            {children}\r\n          </blockContext.Provider>\r\n      ) \r\n}\r\n","/*colors scheme #05386B #379683 #5cdb95 #8ee4af #EDF5E1 */\r\n\r\nimport React,{useRef ,useState} from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {useAuth} from \"../contexts/authContext\";\r\nimport {useBlock} from \"../contexts/blockContext\";\r\nimport QrReader from 'react-qr-reader';\r\nimport {\r\n    Container,\r\n  Typography,\r\n  Grid,\r\n  Button,\r\n  Divider,\r\n  Snackbar,\r\n  Box,\r\n  TextField,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Slide,\r\n} from '@material-ui/core';\r\n\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\nconst useStyles = makeStyles((theme) => (\r\n    {\r\n        input: {\r\n            color:\" #05386B !important\",\r\n            fontWeight:\"400 !important\",\r\n            fontSize: \"20px\",\r\n            marginTop:\"0px\",\r\n            marginBottom:\"0px\"\r\n          },\r\n\r\n        notchedOutline:{\r\n            borderWidth:\"none !important\",\r\n            border:\"none !important\"\r\n        },\r\n        divide: {\r\n            background: \"#EDF5E1 !important\",\r\n            height:\"70px\",\r\n        }\r\n        \r\n    }\r\n))\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n  });\r\n\r\nfunction FetchLocation(props){\r\n    const style = useStyles()\r\n\r\n    const handleClose = () => {\r\n       props.setOpen(false);\r\n   };\r\n\r\n   function LocDisp(props){\r\n       return(\r\n           <Grid item xs = {12}>\r\n               <Grid container justify = \"center\">\r\n           {props.index !== 1 ?<Divider orientation =\"vertical\" className = {style.divide}/>:null}\r\n           </Grid>\r\n           <Grid container justify = \"center\">\r\n               <Typography variant = \"h6\" style = {{\r\n                   color:\"#EDF5E1\",\r\n                   fontSize:\"18px\",\r\n                   fontWeight:\"350\"\r\n               }}>{props.location}</Typography>\r\n           </Grid>\r\n           </Grid>\r\n       )\r\n   }\r\n   return(<Dialog\r\n   open={props.open}\r\n   TransitionComponent={Transition}\r\n   keepMounted\r\n   onClose={handleClose}\r\n   aria-labelledby=\"alert-dialog-slide-title\"\r\n   aria-describedby=\"alert-dialog-slide-description\"\r\n   PaperProps={{\r\n       style: {\r\n         backgroundColor: '#05386B',\r\n       }\r\n   }}\r\n >\r\n   <DialogTitle id=\"alert-dialog-slide-title\" style = {{\r\n         color: '#EDF5E1',\r\n       }}\r\n>{\"Every Location of this Product:\"}</DialogTitle>\r\n   <DialogContent>\r\n       <Grid container>\r\n       {props.locations.map((value , index) => {\r\n           if(value === '' ){\r\n               return\r\n           }else{\r\n       return <LocDisp location ={value} key = {index} index = {index}/>\r\n        }\r\n        })}\r\n       </Grid>\r\n   </DialogContent>\r\n   <DialogActions >\r\n     <Button onClick={handleClose} size = \"small\" style = {{\r\n         backgroundColor: \"#5cdb95\",\r\n         color: \"#05386B\",\r\n         \"&:hover\" :{\r\n             backgroundColor:\"#EDF5E1\"\r\n         }\r\n     }}>\r\n       Close\r\n     </Button>\r\n   </DialogActions>\r\n </Dialog>)\r\n }\r\n\r\nexport function TrackProduct(){\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n        setOpenErr(false)\r\n      };\r\n    const [id,setId] = useState();\r\n    const {trackProduct , fetchOwner,fetchLocations} = useBlock();\r\n    const {addressToName} = useAuth();\r\n    const [name,setName] = useState();\r\n    const [date,setDate] = useState();\r\n    const [cLoc,setCLoc] = useState();\r\n    const [owner,setOwner] = useState();\r\n    const [err,setErr] = useState(false);\r\n    const [openErr,setOpenErr] = useState(false);\r\n    const [locations,setLocations] = useState([\"Enter Product ID first\"]);\r\n    const qrRef = useRef(5);\r\n\r\n    async function handleScan(){\r\n        qrRef.current.openImageDialog();\r\n    }\r\n    async function handleFetchInfo(id){\r\n        try {\r\n            if(!id){\r\n                throw(\"Please enter Product ID\")\r\n            }\r\n            const dataRaw = await trackProduct(id)\r\n            const Address = await fetchOwner(id)\r\n            const Locations = await fetchLocations(id)\r\n            const data = dataRaw.split(\",\")\r\n            setLocations(Locations)\r\n            if(data[0]){\r\n            const ownerRaw = await addressToName(Address)\r\n            setOwner(ownerRaw)\r\n            setName(data[0])\r\n            setCLoc(data[1])\r\n            const temp = new Date(data[2]*1000)\r\n            const dat = temp.getDate();\r\n            var month = temp.getMonth();\r\n            var year = temp.getFullYear();\r\n            var fullDate = dat + \"/\" +(month + 1) + \"/\" + year;\r\n\r\n            setDate(fullDate)\r\n\r\n            }\r\n            else {\r\n                throw(\"No Product registed with entered ID.\")\r\n            }\r\n        }\r\n        catch(error){\r\n            setErr(error)\r\n            setOpenErr(true)\r\n        }\r\n    }\r\n\r\n    const style = useStyles();\r\n\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    return(\r\n    <Grid container spacing = {3} style = {{\r\n        transform:\"translateY(10%)\"\r\n    }}>\r\n                    {openErr &&<Snackbar open={openErr} autoHideDuration={6000} onClose={handleClose}>\r\n                    <Alert onClose={handleClose} severity=\"error\">\r\n                       {err}\r\n                    </Alert>\r\n                    </Snackbar>}\r\n        <Grid item xs = {12}>\r\n    <Container>\r\n    <Grid container>\r\n    <Grid xs = {11}>\r\n    <TextField\r\n    fullWidth\r\n    type = \"number\"\r\n    placeholder=\"Search Product ID\"\r\n    min\r\n    variant= \"outlined\"\r\n    size = \"small\"\r\n    margin = \"none\"\r\n    style = {{\r\n        background:\"#5cdb95\",\r\n        border: \"5px solid #05386B\",\r\n        color:\"05386B\"\r\n    }}\r\n    disableUnderline = \"true\"\r\n    InputProps={{\r\n        classes : {\r\n            notchedOutline:style.notchedOutline,\r\n            input:style.input\r\n        },\r\n        inputProps: { min: 0}\r\n    }} onChange = {(e) => setId(e.target.value)}\r\n    />\r\n        </Grid>\r\n\r\n            <Grid item xs = {1} style = {{\r\n                border:\"5px solid #05386B\",\r\n                borderLeft:\"none\"\r\n            }}>\r\n                <Grid container justify = 'center' alignItems = \"center\">\r\n    <i class=\"fas fa-search\" style = {{\r\n        fontSize:\"25px\",\r\n        color: \"#05386B\",\r\n        transform:\"translateY(30%)\",\r\n        cursor: \"pointer\"\r\n    }} onClick = {() => {handleFetchInfo(id)}}></i></Grid>\r\n    </Grid>\r\n        </Grid>\r\n    </Container>\r\n    </Grid>\r\n\r\n    <Grid container justify = \"center\" >\r\n             <span style = {{marginTop:\"7px\" ,color: \"#05386B\" ,fontWeight:\"650\"}}>OR</span>\r\n         </Grid>\r\n         <Grid container justify = \"center\" style = {{\r\n         }}>\r\n         <Button size = \"small\"><i class=\"fas fa-qrcode\" style = {{\r\n                    color:\"#05386B\",\r\n                    fontSize:\"15px\"\r\n                }}></i><div style = {{\r\n                    fontSize:\"16px\",\r\n                    color:\"#05386B\",\r\n                    marginLeft:\"2px\",\r\n                }} onClick = {handleScan}>Scan QR</div></Button></Grid>\r\n         <QrReader\r\n         ref={qrRef}\r\n        delay={300}\r\n        onScan={(result) => {\r\n            try{\r\n            if(!result){\r\n                throw({ message: \"Please Upload a valid image\"})\r\n            }\r\n            handleFetchInfo(result)\r\n        }\r\n        catch(error){\r\n            setErr(error.message)\r\n            setOpenErr(true)}\r\n        }}\r\n        onError = { (error) => { setErr(error)\r\n            setOpenErr(true)}}\r\n        legacyMode\r\n        />\r\n\r\n    <Grid item xs = {12}>\r\n        <Grid container justify = \"center\" alignItems = \"center\">\r\n    <Box style = {{\r\n        background:\"#05386B\",\r\n        marginTop:\"50px\",\r\n        justifySelf:\"center\",\r\n        width: \"500px\",\r\n        padding:\"30px\",\r\n        color:\"#EDF5E1\",\r\n\r\n\r\n        borderRadius: \"4px\",\r\n        boxShadow: \"0px 0px 12px 2px rgba(15, 15, 15, 0.2)\"\r\n        \r\n    }}>\r\n        <Grid container spacing = {8}>\r\n            <Grid item xs = {12}>\r\n                <Grid container spacing  = {3}  justify = \"center\" >\r\n                    <Grid item xs = {6}><h5  style = {{fontWeight:\"350\"}}className = \"labelText\">Product Name:</h5></Grid>\r\n                    <Grid item xs = {6}><h6 style = {{\r\n                        fontSize:\"20px\",\r\n                        fontWeight:\"350\"\r\n                    }}>{name}</h6></Grid>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid item xs = {12}>\r\n                <Grid container spacing  = {3}  justify = \"center\" >\r\n                    <Grid item xs = {6}><h5  style = {{fontWeight:\"350\"}}className = \"labelText\">Current Owner:</h5></Grid>\r\n                    <Grid item xs = {6}><h6 style = {{\r\n                        fontSize:\"20px\",\r\n                        fontWeight:\"350\"\r\n                    }}>{owner}</h6></Grid>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid item xs = {12}>\r\n                <Grid container row spacing  = {1}>\r\n                    <Grid item xs = {6}><h5 style = {{fontWeight:\"350\"}}  className = \"labelText\">Registered on:</h5></Grid>\r\n                    <Grid item xs = {6}><h6 style = {{\r\n                        fontSize:\"20px\",\r\n                        fontWeight:\"350\"\r\n                    }}>{date}</h6></Grid>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid item xs = {12}>\r\n                <Grid container row spacing  = {1}>\r\n                    <Grid item xs = {6}><h5 style = {{ fontWeight:\"350\"}}  className = \"labelText\">Current Location:</h5></Grid>\r\n                    <Grid item xs = {6}><h6 style = {{\r\n                        fontSize:\"20px\",\r\n                        fontWeight:\"350\"\r\n                    }}>{cLoc}</h6></Grid>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid item xs = {12}>\r\n            <Grid container justify = \"center\">\r\n            <h6 style = {{\r\n        cursor: \"pointer\",\r\n\r\n    }} onClick ={handleClickOpen}>Tap to know every location</h6>\r\n            </Grid>\r\n            </Grid>\r\n        </Grid>\r\n        <FetchLocation  open = {open} setOpen = {setOpen} locations = {locations}/>\r\n    </Box>\r\n    </Grid>\r\n    </Grid>\r\n    </Grid>)\r\n}","/*colors scheme #05386B #379683 #5cdb95 #8ee4af #EDF5E1*/\r\n\r\nimport React ,{useState, useRef} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport {useBlock} from \"../contexts/blockContext\";\r\nimport QRCode from \"qrcode\";\r\nimport QrReader from 'react-qr-reader';\r\nimport {\r\n  Typography,\r\n  Paper,\r\n  Grid,\r\n  Button,\r\n  Divider,\r\n  Snackbar,\r\n  Box,Tab,Tabs,\r\n  TextField,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Slide,\r\n  DialogContentText,\r\n} from '@material-ui/core';\r\n\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n  });\r\n  \r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`vertical-tabpanel-${index}`}\r\n        aria-labelledby={`vertical-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && (\r\n          <Box style = {{\r\n              width: \"300px\",\r\n              paddingLeft:\"20px\",\r\n          }}>\r\n              {children}\r\n          </Box>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  TabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n  };\r\n  \r\n  function a11yProps(index) {\r\n    return {\r\n      id: `vertical-tab-${index}`,\r\n      'aria-controls': `vertical-tabpanel-${index}`,\r\n    };\r\n  }\r\n  \r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      backgroundColor: \"#05386B !important\",\r\n      display: 'flex',\r\n      '.MuiBox-root-13':{\r\n          padding:\"0px !important\"\r\n      }\r\n    },\r\n    tabs: {\r\n      borderRight: `1px solid ${theme.palette.divider}`,\r\n    },\r\n    label : {\r\n        color: \"#EDF5E1 !important\"\r\n    },\r\n    notchedOutline: {\r\n        borderWidth: \"2px\",\r\n        borderColor: \"#5cdb95 !important\",\r\n        color:\"#EDF5E1 !important\"\r\n\r\n      },\r\n      input: {\r\n        color:\"#EDF5E1 !important\"\r\n      },\r\n\r\n      divide: {\r\n          background: \"#EDF5E1 !important\",\r\n          marginTop:\"0px\"\r\n      }\r\n  }));\r\n  \r\nfunction VerticalTabs(props) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n    const [locat, setLocat] = useState();\r\n    const [address, setAddress] = useState();\r\n    const [id, setId] = useState();\r\n    const [name, setName] = useState();\r\n    const qrRef = useRef(5);\r\n\r\n    async function handleScan(){\r\n        qrRef.current.openImageDialog();\r\n    }\r\n    async function handleUpdate(){\r\n      try{\r\n        if(!locat){\r\n          throw({\r\n            message:\"Please Enter Location\"\r\n          })\r\n        }\r\n        if(!id){\r\n          throw({\r\n            message:\"Please Enter Product ID\"\r\n          })\r\n        }\r\n        if(!address){\r\n          throw({\r\n            message:\"Please Enter new Address\"\r\n          })\r\n        }\r\n        const check = await props.pc(id)\r\n        if(id > check){\r\n          throw({\r\n            message:\"No Product registed with entered ID.\"\r\n          })\r\n        }\r\n        await props.uloc(locat,id,address)\r\n        props.setsOpen(true)\r\n      }\r\n    catch(error){\r\n      props.setErr(error.message)\r\n      props.setOpenErr(true)\r\n    }\r\n  }\r\n    const handleChange = (event, newValue) => {\r\n      setValue(newValue);\r\n    };\r\n\r\n   async function handleGen(){\r\n    try {\r\n      if(!name){\r\n        throw({\r\n          \"message\":\"Please Enter Product Name\"\r\n        })\r\n      }\r\n        await props.addPro(name)\r\n        props.handleClickOpen()\r\n         }\r\n      catch(error){\r\n          props.setErr(error.message)\r\n          props.setOpenErr(true)\r\n        }\r\n  }\r\n    return (\r\n      <div className={classes.root}>\r\n        <Tabs\r\n          orientation=\"vertical\"\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"Vertical tabs\"\r\n          className={classes.tabs}\r\n        >\r\n          <Tab label=\"Add\" {...a11yProps(0)} />\r\n          <Tab label=\"Scan\" {...a11yProps(1)} />\r\n        </Tabs>\r\n        <TabPanel value={value} index={0}>\r\n            <Grid container spacing = {3} style = {{\r\n                paddingTop:\"0px\"\r\n            }}>\r\n                <Grid container xs = {12} justify= \"center\" alignItems= \"center\">\r\n                    <Typography variant = \"h5\" style = {{\r\n                        fontWeight:\"320\",\r\n                        marginTop:\"20px\"\r\n                    }}>Enter Product details:</Typography>\r\n                </Grid>\r\n\r\n                <Grid item xs = {12} justify= \"center\" alignItems= \"center\">\r\n                   <Divider className = {classes.divide} style = {{\r\n                   }}></Divider> \r\n                </Grid>\r\n\r\n                <Grid container xs = {12} justify= \"center\" alignItems= \"center\" style = {{\r\n                    marginTop:\"10px\"\r\n                }}>\r\n          \r\n                </Grid>\r\n                <Grid container xs = {12} justify= \"center\" alignItems= \"center\" style = {{\r\n                    marginTop:\"25px\"\r\n                }}>\r\n                <TextField\r\n                    label = \"Product Name\"\r\n                    type = \"text\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    InputLabelProps = {{\r\n                       className : classes.label,\r\n                       \r\n                    }}\r\n                    InputProps={{\r\n                        classes: {\r\n                          notchedOutline: classes.notchedOutline,\r\n                          input : classes.input\r\n                        }\r\n                      }}\r\n                      onChange = {(e) => setName(e.target.value)}\r\n                    required/>\r\n                </Grid>\r\n\r\n                <Grid container xs = {12} justify= \"center\" alignItems= \"center\" style = {{\r\n                    paddingBottom:\"20px\",\r\n                    marginTop:\"20px\"\r\n                }}>\r\n                <Button size = \"small\" onClick = {handleGen}><i class=\"fas fa-qrcode\" style = {{\r\n                    color:\"#EDF5E1\",\r\n                    fontSize:\"15px\"\r\n                }}></i><div style = {{\r\n                    fontSize:\"16px\",\r\n                    color:\"#EDF5E1\",\r\n                    marginLeft:\"2px\",\r\n                }}>Generate QR</div></Button>\r\n                </Grid>\r\n            </Grid>\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1}>\r\n         <Grid container justify = \"center\" style = {{\r\n         }}>\r\n          <Grid container justify = \"center\" style = {{\r\n                  }}>\r\n                      <TextField\r\n                              label = \"Enter Product ID\"\r\n                              type = \"number\"\r\n                              variant=\"outlined\"\r\n                              placeholder = { id?id:null}\r\n                              size=\"small\"\r\n                              fullWidth\r\n                              InputLabelProps = {{\r\n                                className : classes.label,\r\n                                \r\n                              }}\r\n                              InputProps={{\r\n                                  classes: {\r\n                                    notchedOutline: classes.notchedOutline,\r\n                                    input : classes.input\r\n                                  }\r\n                                }}\r\n                                onChange = {(e) => setId(e.target.value)}\r\n                              />\r\n                  </Grid>\r\n                  <Grid container justify = \"center\" style = {{\r\n                  }}>\r\n                      <span style = {{marginTop:\"10px\"}}>OR</span>\r\n                  </Grid>\r\n\r\n         <Button size = \"small\" onClick = {handleScan}><i class=\"fas fa-qrcode\" style = {{\r\n                    color:\"#EDF5E1\",\r\n                    fontSize:\"15px\"\r\n                }}></i><div style = {{\r\n                    fontSize:\"16px\",\r\n                    color:\"#EDF5E1\",\r\n                    marginLeft:\"2px\",\r\n                }}>Scan QR</div></Button>\r\n                <QrReader\r\n         ref={qrRef}\r\n        delay={300}\r\n        onScan={(result) => {\r\n            try{\r\n            if(!result){\r\n                throw({ message: \"Please Upload a valid image\"})\r\n            }\r\n            setId(result)\r\n        }\r\n        catch(error){\r\n          props.setErr(error.message)\r\n          props.setOpenErr(true)}\r\n        }}\r\n        onError = { (error) => { props.setErr(error.message)\r\n          props.setOpenErr(true)}}\r\n        legacyMode\r\n        />\r\n         </Grid>\r\n\r\n         <Grid container justify = \"center\" style = {{\r\n             marginTop:\"20px\"\r\n         }}>\r\n             <TextField\r\n                    label = \"Update Location\"\r\n                    type = \"text\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    InputLabelProps = {{\r\n                       className : classes.label,\r\n                       \r\n                    }}\r\n                    InputProps={{\r\n                        classes: {\r\n                          notchedOutline: classes.notchedOutline,\r\n                          input : classes.input\r\n                        }\r\n                      }}\r\n                      onChange = {(e) => setLocat(e.target.value)}\r\n                    />\r\n         </Grid>\r\n\r\n         <Grid container justify = \"center\" style = {{\r\n             marginTop:\"20px\"\r\n         }}>\r\n             <TextField\r\n                    label = \"new Owner\"\r\n                    type = \"text\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    InputLabelProps = {{\r\n                       className : classes.label,\r\n                       \r\n                    }}\r\n                    InputProps={{\r\n                        classes: {\r\n                          notchedOutline: classes.notchedOutline,\r\n                          input : classes.input\r\n                        }\r\n                      }}\r\n                      onChange = {(e) => setAddress(e.target.value)}\r\n                    />\r\n         </Grid>\r\n\r\n         <Grid container justify = \"center\" style = {{\r\n             marginTop:\"20px\"\r\n         }}>\r\n         <Button size = \"small\" style = {{\r\n             background:\"#5cdb95\",\r\n             color: \"#05386B\"\r\n         }} onClick = {handleUpdate}>Update</Button>\r\n         </Grid>\r\n        </TabPanel>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\nfunction GenQR(props){\r\n\r\n     const handleClose = () => {\r\n        props.setOpen(false);\r\n    };\r\n    return(<Dialog\r\n    open={props.open}\r\n    TransitionComponent={Transition}\r\n    keepMounted\r\n    onClose={handleClose}\r\n    aria-labelledby=\"alert-dialog-slide-title\"\r\n    aria-describedby=\"alert-dialog-slide-description\"\r\n    PaperProps={{\r\n        style: {\r\n          backgroundColor: '#05386B',\r\n        }\r\n    }}\r\n  >\r\n    <DialogTitle id=\"alert-dialog-slide-title\" style = {{\r\n          color: '#EDF5E1',\r\n        }}\r\n>{\"Genarated QR code\"}</DialogTitle>\r\n    <DialogContent>\r\n      <DialogContentText id=\"alert-dialog-slide-description\" style = {{\r\n          color: '#EDF5E1',\r\n          marginBottom:\"5px\"\r\n        }}>\r\n          Please tag the genarated QR code to the Product.\r\n      </DialogContentText>\r\n      <DialogContent id=\"alert-dialog-slide-description\" style = {{\r\n          color: '#EDF5E1',\r\n          marginBottom:\"5px\",\r\n          display: \"flex\",\r\n          flexDirection:\"row\",\r\n          justifyContent:\"center\",\r\n        }}>\r\n          {\r\n          <a href={props.image} download>\r\n          <img src={props.image} alt=\"img\"/>\r\n          </a>}\r\n      </DialogContent>\r\n      <DialogContentText id=\"alert-dialog-slide-description-2\" style = {{\r\n          color: '#EDF5E1'\r\n        }}>\r\n          Product ID:{props.pc}\r\n      </DialogContentText>\r\n    </DialogContent>\r\n    <DialogActions >\r\n      <Button onClick={handleClose} size = \"small\" style = {{\r\n          backgroundColor: \"#5cdb95\",\r\n          color: \"#05386B\",\r\n          \"&:hover\" :{\r\n              backgroundColor:\"#EDF5E1\"\r\n          }\r\n      }}>\r\n        Close\r\n      </Button>\r\n    </DialogActions>\r\n  </Dialog>)\r\n  }\r\n\r\nexport function AddProduct(){\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [sopen, setsOpen] = useState(false);\r\n    const [openErr, setOpenErr] = useState(false);\r\n    const [err, setErr] = useState(false);\r\n    const [imageUrl,setImageUrl] = useState();\r\n    const [pc, setPc] = useState();\r\n    const {addProduct,productCount,updateLocation} = useBlock();\r\n\r\n    const handleClickOpen = async () => {\r\n      const prod = await productCount()\r\n         setPc(prod);\r\n         console.log(prod)\r\n    const response = await QRCode.toDataURL(prod.toString(),{\r\n      color:{\r\n        dark: \"#05386B\",\r\n        light: \"#EDF5E1\"\r\n      },\r\n      scale:\"8\",\r\n      margin:\"2\"\r\n\r\n    });\r\n    setImageUrl(response)\r\n        setOpen(true);\r\n    };\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n    \r\n        setsOpen(false)\r\n        setOpenErr(false)\r\n      };\r\n\r\n   return(\r\n       <div style = {{\r\n        justifyContent:\"center\",\r\n        padding:\"30px\",\r\n        display:\"flex\",\r\n        marginTop:\"200px\"\r\n       }}>\r\n           <Paper style = {{\r\n                padding:\"25px\",\r\n                right: \"-50%\",\r\n                justifySelf:'center',\r\n                alignItems:'center',\r\n                background:\"#05386B\",\r\n                color:\"#EDF5E1\",\r\n            }}>\r\n                {sopen &&<Snackbar open={sopen} autoHideDuration={6000} onClose={handleClose}>\r\n                    <Alert onClose={handleClose} severity=\"success\">\r\n                       Location Updated Successfully!!\r\n                    </Alert>\r\n                    </Snackbar>}\r\n                    {openErr &&<Snackbar open={openErr} autoHideDuration={6000} onClose={handleClose}>\r\n                    <Alert onClose={handleClose} severity=\"error\">\r\n                       {err}\r\n                    </Alert>\r\n                    </Snackbar>}\r\n                <VerticalTabs handleClickOpen = {handleClickOpen} setsOpen = {setsOpen} \r\n                addPro = {addProduct} setErr = {setErr}  setOpenErr = {setOpenErr} pc = {productCount} uloc = {updateLocation} />\r\n                <GenQR open = {open} setOpen = {setOpen}  pc = {pc} image = {imageUrl}/>\r\n           </Paper>\r\n       </div>\r\n   ) \r\n}","import React from \"react\";\r\nimport {\r\nTypography,\r\nButton,\r\nDialog,\r\nDialogActions,\r\nDialogContent,\r\nDialogTitle,\r\n} from '@material-ui/core';\r\nimport {} from \"@material-ui/core\";\r\n\r\nexport function About(props){\r\n\r\n    const {open,setOpen} = props\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return(\r\n        <div>\r\n             <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n          About\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <Typography gutterBottom>\r\n          This application provides platform for sellers and logistics companies to help\r\nTheir customers track orders. The application will have different login portals for\r\nDistributer, buyers, and manufacturers.\r\nHere is how the process work:\r\n          </Typography>\r\n          <Typography gutterBottom>\r\n            <ul>\r\n              <li>\r\n              Manufacturer will add product on the portal and download a QR code generated\r\n              after adding the product. The QR code will be tagged on the shipping box.\r\n              </li>\r\n              <li>\r\n              Then at every freight hub the distributer can scan and update the location of the \r\n              product.\r\n                </li>\r\n                <li>\r\n                Hence, when the product finally reach the retailer and consumers they can easily \r\n                check each and every location of the product.\r\n                </li>\r\n            </ul>\r\n          </Typography>\r\n          <Typography gutterBottom>\r\n          The application will allow different stakeholders (manufacturers, importer, retailer etc.) to\r\n          track the product at every step of the shipment process.\r\n          </Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleClose}>\r\n            close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n        </div>\r\n    )\r\n}","/*colors scheme #05386B #379683 #5cdb95 #8ee4af #EDF5E1 */\r\n\r\nimport React, {useState} from 'react';\r\nimport {useAuth} from '../contexts/authContext';\r\nimport UpdateProfile from \"../login/updateProfile\";\r\nimport {useHistory, Route} from \"react-router-dom\"; \r\nimport {TrackProduct} from \"./trackProduct\";\r\nimport {AddProduct} from \"./addProduct\" ;\r\nimport \"./navbar.scss\";\r\nimport {About} from \"./about\";\r\nimport {Nav ,Navbar , NavDropdown,Container} from \"react-bootstrap\";\r\n\r\n\r\nexport function ManuDash(props){\r\n\r\n    const [icon, setIcon] = useState(true);\r\n    const [open,setOpen] = useState(false);\r\n    const {logout} = useAuth();\r\n    const history = useHistory();\r\n\r\n      const handlelogout = async (e) => {\r\n        await logout().then((user) => {\r\n          history.push('./login')\r\n      }\r\n      )\r\n    }\r\n\r\n    function handleOpen(){\r\n      setOpen(true)\r\n    }\r\n\r\n    return(<div style = {{\r\n      height:\"100vh\",\r\n        backgroundColor:\"#5cdb95\"\r\n    }}>\r\n            <Navbar expand =\"lg\" style = {{\r\n              background: \"#8ee4af\",\r\n              overflow:\"visible\",\r\n              borderBottom:\"4px solid #05386B\",\r\n      }} sticky=\"top\" collapseOnSelect>\r\n              <Navbar.Brand style = {{\r\n                marginLeft: \"50px\",\r\n                color:\"#05386B\",\r\n                fontWeight: \"500\",\r\n                fontSize:\"22px\",\r\n                flexGrow: \"10\"\r\n              }}>\r\n                Supply Chain\r\n              </Navbar.Brand>\r\n              <Navbar.Toggle style = {{\r\n                border:\"none\",\r\n                color: \"#05386B\",\r\n                fontSize:\"25px\"\r\n              }}  onClick = {() => {setIcon(prev => !prev)}}>\r\n                <i class = {icon?\"fa fa-bars\":\"fa fa-times\"} ></i>\r\n              </Navbar.Toggle>\r\n              <Navbar.Collapse>\r\n          <Nav onSelect={() => setIcon(prev => !prev)}>\r\n              <Nav.Link href=\"./#/home/addproduct\" >Add Product</Nav.Link>\r\n              <Nav.Link href=\"./#/home/trackproduct\" >Track Product</Nav.Link>\r\n              <Nav.Link onClick = {handleOpen} >About</Nav.Link>\r\n              < NavDropdown title = \"Profile\">\r\n                <NavDropdown.Item href=\"./#/home/profile\">Update Profile</NavDropdown.Item>\r\n                <NavDropdown.Item onClick = {handlelogout} >Logout</NavDropdown.Item>\r\n            </NavDropdown>\r\n              </Nav>\r\n              </Navbar.Collapse>\r\n            </Navbar>\r\n            <Container component=\"main\">\r\n                <Route path = \"/home/profile\" component = {UpdateProfile}></Route>\r\n                <Route path = \"/home/trackproduct\" component = {TrackProduct}></Route>\r\n                <Route path = \"/home/addproduct\" component = {AddProduct}></Route>\r\n                <About open = {open} setOpen = {setOpen}/>\r\n            </Container>\r\n            </div>\r\n          )\r\n}","import React, {useState} from 'react';\r\nimport {useAuth} from '../contexts/authContext';\r\nimport UpdateProfile from \"../login/updateProfile\";\r\nimport {useHistory, Route} from \"react-router-dom\"; \r\nimport {TrackProduct} from \"./trackProduct\";\r\nimport \"./navbar.scss\";\r\nimport {About} from \"./about\";\r\nimport {Nav ,Navbar , NavDropdown,Container} from \"react-bootstrap\";\r\n\r\n\r\nexport function BuyerDash(){\r\n\r\n    const [icon, setIcon] = useState(true);\r\n    const [open,setOpen] = useState(false);\r\n    const {logout} = useAuth();\r\n    const history = useHistory();\r\n      const handlelogout = async (e) => {\r\n        await logout().then((user) => {\r\n          history.push('./login')\r\n      }\r\n      )\r\n    }\r\n    function handleOpen(){\r\n      setOpen(true)\r\n    }\r\n\r\n\r\n    return(<div style = {{\r\n      position:\"absolute\",\r\n        top:\"0\",\r\n        left:\"0\",\r\n        bottom:\"0\",\r\n        right:\"0\",\r\n        height:\"100%\",\r\n        width:\"100%\",\r\n        backgroundColor:\"#5cdb95\"\r\n    }}>\r\n            <Navbar expand =\"lg\" style = {{\r\n              background: \"#8ee4af\",\r\n              overflow:\"visible\",\r\n              borderBottom:\"4px solid #05386B\",\r\n      }} sticky=\"top\" collapseOnSelect>\r\n              <Navbar.Brand style = {{\r\n                marginLeft: \"50px\",\r\n                color:\"#05386B\",\r\n                fontWeight: \"500\",\r\n                fontSize:\"22px\",\r\n                flexGrow: \"10\"\r\n              }}>\r\n                Supply Chain\r\n              </Navbar.Brand>\r\n              <Navbar.Toggle style = {{\r\n                border:\"none\",\r\n                color: \"#05386B\",\r\n                fontSize:\"25px\"\r\n              }}  onClick = {() => {setIcon(prev => !prev)}}>\r\n                <i class = {icon?\"fa fa-bars\":\"fa fa-times\"} ></i>\r\n              </Navbar.Toggle>\r\n              <Navbar.Collapse>\r\n          <Nav onSelect={() => setIcon(prev => !prev)}>\r\n              <Nav.Link href=\"./#/home/trackproduct\" >Track Product</Nav.Link>\r\n              <Nav.Link onClick = {handleOpen}>About</Nav.Link>\r\n              < NavDropdown title = \"Profile\">\r\n                <NavDropdown.Item href=\"./#/home/profile\">Update Profile</NavDropdown.Item>\r\n                <NavDropdown.Item onClick = {handlelogout} >Logout</NavDropdown.Item>\r\n            </NavDropdown>\r\n              </Nav>\r\n              </Navbar.Collapse>\r\n            </Navbar>\r\n            <Container component=\"main\" fluid>\r\n                <Route path = \"/home/profile\" component = {UpdateProfile}></Route>\r\n                <Route path = \"/home/trackproduct\" component = {TrackProduct}></Route>\r\n                <About  open = {open} setOpen = {setOpen} />\r\n            </Container>\r\n            </div>\r\n          )\r\n}\r\n","import React ,{useRef,useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport QrReader from 'react-qr-reader';\r\nimport {useBlock} from '../contexts/blockContext';\r\n\r\nimport {\r\n  Typography,\r\n  Paper,\r\n  Grid,\r\n  Button,\r\n  Divider,\r\n  Snackbar,\r\n  TextField,\r\n} from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: \"#05386B !important\",\r\n    display: 'flex',\r\n    height: 224,\r\n    '.MuiBox-root-13':{\r\n        padding:\"0px !important\"\r\n    }\r\n  },\r\n  tabs: {\r\n    borderRight: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  label : {\r\n      color: \"#EDF5E1 !important\"\r\n  },\r\n  notchedOutline: {\r\n      borderWidth: \"2px\",\r\n      borderColor: \"#5cdb95 !important\",\r\n      color:\"#EDF5E1 !important\"\r\n\r\n    },\r\n    input: {\r\n      color:\"#EDF5E1 !important\"\r\n    },\r\n\r\n    divide: {\r\n        backgroundColor: \"#EDF5E1\"\r\n    }\r\n}));\r\n\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\nexport function Scan(props){\r\n  const classes = useStyles();\r\n  const [sopen,setsOpen] = useState(false);\r\n  const [openErr, setOpenErr] = useState(false);\r\n  const [id, setId] = useState();\r\n  const [locat,setLocat] = useState();\r\n  const [address,setAddress] = useState();\r\n  const { updateLocation ,productCount} = useBlock();\r\n    const [err, setErr] = useState(false);\r\n    const qrRef = useRef(5);\r\n\r\n    function handleScan(){\r\n      qrRef.current.openImageDialog();\r\n  }\r\n    async function submitValues(){\r\n      try{\r\n        if(!locat){\r\n          throw({\r\n            message:\"Please Enter Location\"\r\n          })\r\n        }\r\n          if(!id){\r\n            throw({\r\n              message:\"Please Enter Product ID\"\r\n            })\r\n        }\r\n\r\n        if(!address){\r\n          throw({\r\n            message:\"Please Enter new Owner\"\r\n          })\r\n        }\r\n        const check = await productCount(id)\r\n        if(id > check){\r\n          throw({\r\n            message:\"No Product registed with entered ID.\"\r\n          })\r\n        }\r\n      await updateLocation(locat,id,address)\r\n      setsOpen(true);\r\n      }\r\n      catch(error){\r\n        setErr(error.message)\r\n        setOpenErr(true)\r\n      }\r\n    }\r\n  const handleClose = () => {\r\n    setsOpen(false);\r\n    setOpenErr(false);\r\n};\r\n\r\nreturn <div style = {{\r\n  display : \"flex\",\r\n  justifyContent:\"center\"\r\n}}><Paper style = {{\r\n  padding:\"15px 100px 25px 100px\",\r\n  right: \"-50%\",\r\n  alignItems:'center',\r\n  background:\"#05386B\",\r\n  color:\"#EDF5E1\",\r\n  marginTop: \"200px\",\r\n  Width:\"500px\",\r\n}}>\r\n  {sopen &&<Snackbar open={sopen} autoHideDuration={6000} onClose={handleClose}>\r\n                    <Alert onClose={handleClose} severity=\"success\">\r\n                       Location Updated Successfully!!\r\n                    </Alert>\r\n                    </Snackbar>}\r\n                    {openErr &&<Snackbar open={openErr} autoHideDuration={6000} onClose={handleClose}>\r\n                    <Alert onClose={handleClose} severity=\"error\">\r\n                       {err}\r\n                    </Alert>\r\n                    </Snackbar>}\r\n    <Grid container justify = \"center\" style = {{\r\n             marginTop:\"10px\"\r\n         }}>\r\n           <Grid container justify = \"center\">\r\n           <Typography variant = \"h5\" style = {{\r\n                        fontWeight:\"320\",\r\n                    }}>Update Location:</Typography></Grid>\r\n                    <Grid item xs = {12} justify= \"center\" alignItems= \"center\">\r\n                   <Divider className = {classes.divide} style = {{\r\n                       marginBottom:\"40px\"\r\n                   }}></Divider> \r\n                </Grid>\r\n\r\n                <Grid container justify = \"center\" style = {{\r\n         }}>\r\n             <TextField\r\n                    id = \"id\"\r\n                    name = \"id\"\r\n                    label = \"Enter Product ID\"\r\n                    type = \"number\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    InputLabelProps = {{\r\n                       className : classes.label,\r\n                       \r\n                    }}\r\n                    InputProps={{\r\n                        classes: {\r\n                          notchedOutline: classes.notchedOutline,\r\n                          input : classes.input\r\n                        }\r\n                      }}\r\n                      \r\n                       onChange = {(e) => setId(e.target.value)}\r\n                    />\r\n         </Grid>\r\n         <Grid container justify = \"center\" style = {{\r\n         }}>\r\n             <span style = {{marginTop:\"10px\"}}>OR</span>\r\n         </Grid>\r\n\r\n         <Button size = \"small\" onClick = {handleScan}><i class=\"fas fa-qrcode\" style = {{\r\n                    color:\"#EDF5E1\",\r\n                    fontSize:\"15px\"\r\n                }}></i><div style = {{\r\n                    fontSize:\"16px\",\r\n                    color:\"#EDF5E1\",\r\n                    marginLeft:\"2px\",\r\n                }}>Scan QR</div></Button>\r\n           <QrReader\r\n         ref={qrRef}\r\n        delay={300}\r\n        onScan={(result) => {\r\n            try{\r\n            if(!result){\r\n                throw({ message: \"Please Upload a valid image\"})\r\n            }\r\n            setId(result)\r\n        }\r\n        catch(error){\r\n          setErr(error.message)\r\n          setOpenErr(true)}\r\n        }}\r\n        onError = { (error) => { setErr(error.message)\r\n          setOpenErr(true)}}\r\n        legacyMode/>\r\n         </Grid>\r\n\r\n         <Grid container justify = \"center\" style = {{\r\n             marginTop:\"10px\"\r\n         }}>\r\n             <TextField\r\n                    id = \"location\"\r\n                    name = \"location\"\r\n                    label = \"Update Location\"\r\n                    type = \"text\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    InputLabelProps = {{\r\n                       className : classes.label,\r\n                       \r\n                    }}\r\n                    InputProps={{\r\n                        classes: {\r\n                          notchedOutline: classes.notchedOutline,\r\n                          input : classes.input\r\n                        }\r\n                      }}\r\n                       onChange = {(e) => setLocat(e.target.value)}\r\n                      \r\n                    />\r\n         </Grid>\r\n\r\n         <Grid container justify = \"center\" style = {{\r\n             marginTop:\"10px\"\r\n         }}>\r\n             <TextField\r\n                    id = \"address\"\r\n                    name = \"address\"\r\n                    label = \"new Owner\"\r\n                    type = \"text\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    InputLabelProps = {{\r\n                       className : classes.label,\r\n                       \r\n                    }}\r\n                    InputProps={{\r\n                        classes: {\r\n                          notchedOutline: classes.notchedOutline,\r\n                          input : classes.input\r\n                        }\r\n                      }}\r\n                       onChange = {(e) => setAddress(e.target.value)}\r\n                      \r\n                    />\r\n         </Grid>\r\n\r\n         <Grid container justify = \"center\" style = {{\r\n             marginTop:\"20px\"\r\n         }}>\r\n         <Button size = \"small\" style = {{\r\n             background:\"#5cdb95\",\r\n             color: \"#05386B\"\r\n         }} onClick = {submitValues}>Update</Button></Grid></Paper></div>\r\n        }","/*colors scheme #05386B #379683 #5cdb95 #8ee4af #EDF5E1 */\r\n\r\nimport React, {useState} from 'react';\r\nimport {useAuth} from '../contexts/authContext';\r\nimport UpdateProfile from \"../login/updateProfile\";\r\nimport {useHistory, Route} from \"react-router-dom\"; \r\nimport {TrackProduct} from \"./trackProduct\";\r\nimport {Scan} from \"./Scan\" ;\r\nimport \"./navbar.scss\";\r\nimport {About} from \"./about\";\r\nimport {Nav ,Navbar , NavDropdown,Container} from \"react-bootstrap\";\r\n\r\nexport function RetDash(){\r\n\r\n    const [open,setOpen] = useState(false);\r\n  const [icon, setIcon] = useState(true);\r\n    const {logout} = useAuth();\r\n    const history = useHistory();\r\n\r\n      const handlelogout = async (e) => {\r\n        await logout().then((user) => {\r\n          history.push('/login')\r\n      }\r\n      )}\r\n\r\n      function handleOpen(){\r\n        setOpen(true)\r\n      }\r\n\r\n    return(<div style = {{\r\n      position:\"absolute\",\r\n        top:\"0\",\r\n        left:\"0\",\r\n        bottom:\"0\",\r\n        right:\"0\",\r\n      height: \"100%\",\r\n        width:\"100%\",\r\n        backgroundColor:\"#5cdb95\"\r\n    }}>\r\n            <Navbar expand =\"lg\" style = {{\r\n              background: \"#8ee4af\",\r\n              overflow:\"visible\",\r\n        borderBottom: \"4px solid #05386B\",\r\n      }} sticky=\"top\" collapseOnSelect>\r\n              <Navbar.Brand style = {{\r\n                marginLeft: \"50px\",\r\n                color:\"#05386B\",\r\n                fontWeight: \"500\",\r\n                fontSize:\"22px\",\r\n                flexGrow: \"10\"\r\n              }}>\r\n                Supply Chain\r\n              </Navbar.Brand>\r\n              <Navbar.Toggle style = {{\r\n                border:\"none\",\r\n                color: \"#05386B\",\r\n                fontSize:\"25px\"\r\n        }} onClick={() => { setIcon(prev => !prev) }}>\r\n                <i class = {icon?\"fa fa-bars\":\"fa fa-times\"} ></i>\r\n              </Navbar.Toggle>\r\n              <Navbar.Collapse>\r\n          <Nav onSelect={() => setIcon(prev => !prev)}>\r\n            <Nav.Link href=\"./#/home/scanshipment\">Scan Shipment</Nav.Link>\r\n              <Nav.Link href=\"./#/home/trackproduct\" >Track Product</Nav.Link>\r\n              <Nav.Link onClick = {handleOpen} >About</Nav.Link>\r\n              < NavDropdown title = \"Profile\">\r\n                <NavDropdown.Item href=\"./#/home/profile\">Update Profile</NavDropdown.Item>\r\n                <NavDropdown.Item onClick = {handlelogout} >Logout</NavDropdown.Item>\r\n            </NavDropdown>\r\n              </Nav>\r\n              </Navbar.Collapse>\r\n            </Navbar>\r\n            <Container component=\"main\" fluid>\r\n                <Route path = \"/home/profile\" component = {UpdateProfile}></Route>\r\n                <Route path = \"/home/trackproduct\" component = {TrackProduct}></Route>\r\n                <Route path = \"/home/scanshipment\" component = {Scan}></Route>\r\n                <About open = {open} setOpen = {setOpen}/>\r\n            </Container>\r\n            </div>\r\n          )\r\n}","import React from 'react';\r\nimport {useAuth} from \"./contexts/authContext\";\r\nimport {database} from \"./firebase\";\r\nimport {Redirect, Route } from \"react-router-dom\"\r\nimport {ManuDash} from \"./Dashboards/manuDash\";\r\nimport {BuyerDash} from \"./Dashboards/buyerDash\"\r\nimport { RetDash } from './Dashboards/retailerDash';\r\nimport { useLocalStorage} from \"./hooks/useLocalStorage\"\r\n\r\nexport default function PrivateRoute( {...rest}){\r\n\r\n    const roleRoute = {\r\n        \"manufacturer\": <ManuDash/>,\r\n        \"retailer\": <RetDash/>,\r\n        \"exporter\": <RetDash/>,\r\n        \"importer\": <RetDash/>,\r\n        \"distributer\":<RetDash/>,\r\n        \"buyer\": <BuyerDash/>,\r\n        \"undefined\":<div>Loading..</div>\r\n    \r\n    }\r\n\r\n    const {currentUser} = useAuth() \r\n    const [userRole,setUserRole] = useLocalStorage(\"role\", \" \")\r\n\r\n    async function fetchRole(){\r\n        if(currentUser){\r\n        await database.ref(\"users/\" + currentUser.uid).child(\"role\").get().then(snapshot =>{\r\n            if(snapshot.exists()){\r\n            setUserRole(snapshot.val())}\r\n    })\r\n}\r\n    }\r\n\r\n    React.useEffect(()=>{\r\n        fetchRole()\r\n    },[currentUser,userRole])\r\n    return (\r\n        <Route\r\n            {...rest}\r\n        render = {props => {\r\n            if(window.ethereum){\r\n            return currentUser ?roleRoute[userRole]: <Redirect to = \"/login\"/>}\r\n        }\r\n        }>    \r\n        </Route>\r\n    )\r\n}","/*colors scheme #05386B #379683 #5cdb95 #8ee4af #EDF5E1 */\r\n\r\nimport React, { useState } from \"react\"\r\nimport { useAuth} from \"../contexts/authContext\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport {\r\n  Typography,\r\n  Paper,\r\n  Link,\r\n  Grid,\r\n  Button,\r\n  MenuItem,\r\n  TextField,\r\n  Divider,\r\n  Snackbar,\r\n  Container\r\n} from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nconst Roles = [\r\n    \"manufacturer\",\r\n    \"exporter\",\r\n    \"importer\",\r\n    \"distributer\",\r\n    \"retailer\",\r\n    \"buyer\"\r\n]\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\nconst validationSchema = yup.object({\r\n\r\n    email: yup\r\n      .string('Enter your email')\r\n      .email('Enter a valid email'),\r\n    password: yup\r\n      .string('Enter your password')\r\n      .min(8, 'Password should be of minimum 8 characters length'),\r\n    passwordConfirmation: yup.string()\r\n      .oneOf([yup.ref('password'), null], 'Passwords must match')\r\n  });\r\n\r\n  const useStyle = makeStyles((theme)=>({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n          margin: theme.spacing(1),\r\n          borderColor: \"#5cdb95 !important\",\r\n          Color: \"#EDF5E1 !important\"\r\n        }},\r\n          input:{\r\n              color:\"#EDF5E1 !important\"\r\n          },\r\n          label:{\r\n            color: \"#EDF5E1 !important\",\r\n            fontSize:\"17px\"\r\n          },\r\n          notchedOutline:{\r\n            borderWidth: \"2px\",\r\n            borderColor: \"#5cdb95 !important\",\r\n            color:\"#EDF5E1 !important\"\r\n          },\r\n          button: {\r\n            backgroundColor: \"#5cdb95\",\r\n            color: \"#05386B\",\r\n            justifySelf:\"center\",\r\n            marginTop: \"20px\",\r\n            marginleft: \"100px\",\r\n            \"&:hover\" :{\r\n                backgroundColor:\"#EDF5E1\"\r\n            }\r\n        },\r\n        divide:{\r\n            background:\"#EDF5E1 !important\"\r\n        }\r\n  }))\r\nexport function Register(props) {\r\n        const { signup} = useAuth()\r\n        const {writeData} = useAuth()\r\n        const style = useStyle()\r\n        const [err,setErr] = useState(0);\r\n        const history = useHistory();\r\n        const [open ,setOpen] = useState(false)\r\n        const [openErr,setOpenErr] = useState(false)\r\n        const formik = useFormik({\r\n            initialValues: {\r\n\r\n            },\r\n            validationSchema: validationSchema,\r\n            onSubmit: submitValues\r\n            })\r\n\r\n            async function submitValues(values){\r\n                try{\r\n                await signup(values.email,values.password).then(async (user) =>{\r\n                    await writeData(values.Username,values.role,user.user.uid,values.address).then((user) => {\r\n                        setOpen(true);\r\n                        history.push(\"./home/trackproduct\")\r\n                    }).catch((error) =>{\r\n                        setErr(error.message)\r\n                    })\r\n                })\r\n            }catch(error){\r\n                setErr(error.message)\r\n                setOpenErr(true)\r\n            }\r\n            }\r\n\r\n            const handleClose = (event, reason) => {\r\n                if (reason === 'clickaway') {\r\n                  return;\r\n                }\r\n            \r\n                setOpen(false)\r\n                setOpenErr(false)\r\n              };\r\n\r\n        return(<div style = {{\r\n            position:\"absolute\",\r\n              top:\"0\",\r\n              left:\"0\",\r\n              bottom:\"0\",\r\n              right:\"0\",\r\n              height:\"100%\",\r\n              width:\"100%\",\r\n              backgroundColor:\"#5cdb95\"\r\n          }}>\r\n        <Container component = \"main\" maxWidth = \"xs\" style = {{\r\n            marginTop:\"60px\"\r\n        }}>\r\n            {open &&<Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                    <Alert onClose={handleClose} severity=\"success\">\r\n                       Profile Created Successfully!!\r\n                    </Alert>\r\n                    </Snackbar>}\r\n                    {openErr &&<Snackbar open={openErr} autoHideDuration={6000} onClose={handleClose}>\r\n                    <Alert onClose={handleClose} severity=\"error\">\r\n                       {err}\r\n                    </Alert>\r\n                    </Snackbar>}\r\n           <Paper\r\n           style = {{\r\n            padding:\"25px\",\r\n            justifyContent:'center',\r\n            alignItems:'center',\r\n            background:\"#05386B\",\r\n            color:\"#EDF5E1\",\r\n            height: \"700px\"\r\n           }}>\r\n               <form onSubmit = {formik.handleSubmit}>\r\n               <Grid container spacing = {2} style = {{\r\n                   MarginTop: \"100px\"\r\n               }}>\r\n                   \r\n                   <Grid container justify = \"center\"  align=\"center\">\r\n                        <Typography variant = \"h2\" style = {{\r\n                            fontSize: \"50px\"\r\n                        }}>Sign Up</Typography></Grid>\r\n\r\n                    <Grid item xs = { 12} >\r\n                    <Divider className = {style.divide} style = {{\r\n                                        marginBottom:\"30px\"}}/>\r\n                    </Grid>\r\n                   <Grid item xs = { 12} justify = \"center\" align=\"center\">\r\n                        <TextField\r\n                    id = \"Username\"\r\n                    name = \"Username\"\r\n                    label = \"User Name\"\r\n                    type = \"text\"\r\n                    variant=\"outlined\"\r\n                    className = {style.textField}\r\n                    InputLabelProps = {{\r\n                       className : style.label,\r\n                       \r\n                    }}\r\n                    InputProps={{\r\n                        classes: {\r\n                          notchedOutline: style.notchedOutline,\r\n                          input : style.input\r\n                        }\r\n                      }}\r\n                      value={formik.values.Username}\r\n                       onChange = {formik.handleChange}\r\n                    />\r\n                   </Grid>\r\n\r\n                   <Grid item xs = {12} justify = \"center\" align=\"center\">\r\n                   <TextField\r\n                    id = \"email\"\r\n                    name = \"email\"\r\n                    label = \"Email\"\r\n                    type = \"text\"\r\n                    variant=\"outlined\"\r\n                    InputLabelProps = {{\r\n                        className : style.label,\r\n                        \r\n                     }}\r\n                     InputProps={{\r\n                         classes: {\r\n                           notchedOutline: style.notchedOutline,\r\n                           input : style.input\r\n                         }\r\n                       }}\r\n                       value={formik.values.email}\r\n                       onChange = {formik.handleChange}\r\n                      error={formik.touched.email && Boolean(formik.errors.email)}\r\n                      helperText={formik.touched.email && formik.errors.email}\r\n                    />\r\n                   </Grid>\r\n\r\n                   <Grid item xs = {12} justify = \"center\" align=\"center\">\r\n                   <TextField\r\n                       id = \"password\"\r\n                       name = \"password\"\r\n                       label = \"password\"\r\n                       variant = \"outlined\"\r\n                       type = \"password\"\r\n                       value={formik.values.password}\r\n                       onChange={formik.handleChange}\r\n                       InputProps = {{\r\n                           classes:{\r\n                                notchedOutline: style.notchedOutline,\r\n                               input:style.input\r\n                           }\r\n                       }}\r\n                       InputLabelProps = {{\r\n                           className: style.label\r\n                       }}\r\n                       error = {formik.touched.password && Boolean(formik.errors.password)}\r\n                       helperText = {formik.touched.password && formik.errors.password}/>\r\n                   </Grid>\r\n\r\n                   <Grid item xs = {12} align=\"center\">\r\n                   <TextField\r\n                       id = \"passwordConfirmation\"\r\n                       name = \"passwordConfirmation\"\r\n                       label = \"Confirm Password\"\r\n                       variant = \"outlined\"\r\n                       type = \"password\"\r\n                       value={formik.values.passwordConfirmation}\r\n                       onChange={formik.handleChange}\r\n                       InputProps = {{\r\n                           classes:{\r\n                                notchedOutline: style.notchedOutline,\r\n                               input:style.input\r\n                           }\r\n                       }}\r\n                       InputLabelProps = {{\r\n                           className: style.label\r\n                       }}\r\n                       error = {formik.touched.passwordConfirmation && Boolean(formik.errors.passwordConfirmation)}\r\n                       helperText = {formik.touched.passwordConfirmation && formik.errors.passwordConfirmation}></TextField>\r\n                   </Grid>\r\n\r\n                   <Grid item xs = {12} align=\"center\">\r\n                   <TextField\r\n                       id = \"address\"\r\n                       name = \"address\"\r\n                       label = \"Wallet Address\"\r\n                       variant = \"outlined\"\r\n                       type = \"text\"\r\n                       value={formik.values.address}\r\n                       onChange={formik.handleChange}\r\n                       InputProps = {{\r\n                           classes:{\r\n                                notchedOutline: style.notchedOutline,\r\n                               input:style.input\r\n                           }\r\n                       }}\r\n                       InputLabelProps = {{\r\n                           className: style.label\r\n                       }}\r\n                      ></TextField>\r\n                   </Grid>\r\n\r\n                   <Grid item xs = {12}>\r\n                   <TextField\r\n                   fullWidth\r\n                   select\r\n                      id = \"role\"\r\n                       name = \"role\"\r\n                       label = \"Select your Role\"\r\n                       variant = \"outlined\"\r\n                       onChange={formik.handleChange}\r\n                       InputProps = {{\r\n                           classes:{\r\n                                notchedOutline: style.notchedOutline,\r\n                               input:style.input\r\n                           }\r\n                       }}\r\n                       InputLabelProps = {{\r\n                           className: style.label\r\n                       }}\r\n\r\n                       >{Roles.map( (role , index)=>(\r\n                    <MenuItem value={role} key = {index}>{role}</MenuItem>\r\n                      ))}</TextField>\r\n                   </Grid>\r\n\r\n                   <Grid container xs = {12} justify = \"center\">\r\n                       <Button type = \"submit\" className = {style.button} size = \"large\">Signup</Button>\r\n                       </Grid>\r\n\r\n                       <Grid container xs = {12} justify = \"center\">\r\n                       <Link href=\"#/login\" variant=\"body2\" style = {{\r\n                           paddingTop: \"20px\",\r\n                           color:\"#EDF5E1\",\r\n                           fontSize:\"16px\"\r\n                       }} underline = \"hover\">\r\n                Already have an account? Login\r\n              </Link>\r\n                       </Grid>\r\n               </Grid>\r\n               </form>\r\n           </Paper>\r\n           </Container>\r\n           </div>\r\n        ) \r\n    }\r\n","import React from \"react\";\r\n\r\nexport function Instructions(){\r\n\r\n    return(\r\n        <div style = {{\r\n        top:\"0\",\r\n        left:\"0\",\r\n        bottom:\"0\",\r\n        right:\"0\",\r\n        height:\"100vh\",\r\n        width:\"100%\",\r\n        display:\"flex\",\r\n        justiftyContent:\"center\",\r\n        background: \"#5cdb95\"}}>\r\n            <div style = {{\r\n                marginTop:\"200px\",\r\n                color:\"#05386B\",\r\n            }}>\r\n                <h1>Your browser is not connected to the blockchain follow given steps:</h1>\r\n                <ul style = {{\r\n                    fontSize: \"20px\",\r\n                    display: \"grid\",\r\n                    gap:\"5px\"\r\n                }}>\r\n                    <li>\r\n                        Download MetaMask extension from your browser's extension store.\r\n                    </li>\r\n                    <li>\r\n                        setup Account and switch to kovan testnet from ethereum mainnet.\r\n                    </li>\r\n                    <li>\r\n                        browse to https://faucet.kovan.network/ and request test ETH.\r\n                    </li>\r\n                    <li>\r\n                        refresh the page and enjoy!!!.\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}","/*colors scheme #05386B #379683 #5cdb95 #8ee4af #EDF5E1 */\r\n\r\nimport React, {useState } from \"react\"\r\nimport { useAuth} from \"../contexts/authContext\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport {\r\n  Typography,\r\n  Paper,\r\n  Link,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  Divider,\r\n  Snackbar,\r\n  Container\r\n} from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\nconst validationSchema = yup.object({\r\n\r\n    email: yup\r\n      .string('Enter your email')\r\n      .email('Enter a valid email'),\r\n    password: yup\r\n      .string('Enter your password')\r\n      .min(8, 'Password should be of minimum 8 characters length'),\r\n  });\r\n\r\n  const useStyle = makeStyles((theme)=>({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n          margin: theme.spacing(1),\r\n          borderColor: \"#5cdb95 !important\",\r\n          Color: \"#EDF5E1 !important\"\r\n        }},\r\n          input:{\r\n              color:\"#EDF5E1 !important\"\r\n          },\r\n          label:{\r\n            color: \"#EDF5E1 !important\",\r\n            fontSize:\"17px\"\r\n          },\r\n          notchedOutline:{\r\n            borderWidth: \"2px\",\r\n            borderColor: \"#5cdb95 !important\",\r\n            color:\"#EDF5E1 !important\"\r\n          },\r\n          button: {\r\n            backgroundColor: \"#5cdb95\",\r\n            color: \"#05386B\",\r\n            justifySelf:\"center\",\r\n            marginTop: \"20px\",\r\n            marginleft: \"100px\",\r\n            \"&:hover\" :{\r\n                backgroundColor:\"#EDF5E1\"\r\n            }\r\n        },\r\n        divide:{\r\n            background:\"#EDF5E1 !important\",\r\n        }\r\n  }))\r\nexport function Login() {\r\n\r\n    const {login} = useAuth()\r\n    const history = useHistory()\r\n    const [err,setErr] = useState()\r\n    const [open ,setOpen] = useState(false)\r\n    const [openErr,setOpenErr] = useState(false)\r\n    const style = useStyle()\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n\r\n        },\r\n        validationSchema: validationSchema,\r\n        onSubmit: handleLogin\r\n        })\r\n\r\n    async function handleLogin(values) {\r\n\r\n        try{\r\n        await login(values.email,values.password)\r\n             setErr(0) \r\n            history.push(\"./home/trackproduct\")\r\n            setOpen(true)\r\n        }\r\n        catch(error){\r\n                setErr(error.message)\r\n                setOpenErr(true)\r\n            }\r\n        }\r\n\r\n        const handleClose = (event, reason) => {\r\n            if (reason === 'clickaway') {\r\n              return;\r\n            }\r\n            setOpen(false)\r\n            setOpenErr(false)\r\n        }\r\n\r\n        return (<div style = {{\r\n          position:\"absolute\",\r\n            top:\"0\",\r\n            left:\"0\",\r\n            bottom:\"0\",\r\n            right:\"0\",\r\n            height:\"100%\",\r\n            width:\"100%\",\r\n            backgroundColor:\"#5cdb95\"\r\n        }}><Container maxWidth = \"xs\" style = {{ marginTop: \"100px\"}}>\r\n        {open &&<Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"success\">\r\n                  Login Successfully!!\r\n                </Alert>\r\n                </Snackbar>}\r\n                {<Snackbar open={openErr} autoHideDuration={6000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity=\"error\">\r\n                   {err}\r\n                </Alert>\r\n                </Snackbar>}\r\n       <Paper\r\n       style = {{\r\n        padding:\"20px\",\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n        background:\"#05386B\",\r\n        color:\"#EDF5E1\",\r\n        height: \"540px\"\r\n       }}>\r\n           <form onSubmit = {formik.handleSubmit}>\r\n           <Grid container spacing = {2} style = {{\r\n               MarginTop: \"100px\"\r\n           }}>\r\n               \r\n               <Grid container justify = \"center\"  align=\"center\">\r\n                    <Typography variant = \"h2\" style = {{\r\n                        fontSize: \"50px\"\r\n                    }}>Login</Typography></Grid>\r\n\r\n                <Grid item xs = {12} justify = \"center\" align=\"center\" >\r\n                <Divider className = {style.divide} />\r\n                </Grid>\r\n\r\n                <Grid item xs = {12}  justify = \"center\" align=\"center\" style = {{\r\n                    fontSize: \"70px\",\r\n                }}>\r\n                <i class=\"fas fa-sign-in-alt\" ></i>\r\n                </Grid>\r\n\r\n               <Grid item xs = {12} justify = \"center\" align=\"center\">\r\n               <TextField\r\n                id = \"email\"\r\n                name = \"email\"\r\n                label = \"Email\"\r\n                type = \"text\"\r\n                variant=\"outlined\"\r\n                InputLabelProps = {{\r\n                    className : style.label,\r\n                    \r\n                 }}\r\n                 InputProps={{\r\n                     classes: {\r\n                       notchedOutline: style.notchedOutline,\r\n                       input : style.input\r\n                     }\r\n                   }}\r\n                   value={formik.values.email}\r\n                   onChange = {formik.handleChange}\r\n                  error={formik.touched.email && Boolean(formik.errors.email)}\r\n                  helperText={formik.touched.email && formik.errors.email}\r\n                />\r\n               </Grid>\r\n\r\n               <Grid item xs = {12} justify = \"center\" align=\"center\">\r\n               <TextField\r\n                   id = \"password\"\r\n                   name = \"password\"\r\n                   label = \"password\"\r\n                   variant = \"outlined\"\r\n                   type = \"password\"\r\n                   value={formik.values.password}\r\n                   onChange={formik.handleChange}\r\n                   InputProps = {{\r\n                       classes:{\r\n                            notchedOutline: style.notchedOutline,\r\n                           input:style.input\r\n                       }\r\n                   }}\r\n                   InputLabelProps = {{\r\n                       className: style.label\r\n                   }}\r\n                   error = {formik.touched.password && Boolean(formik.errors.password)}\r\n                   helperText = {formik.touched.password && formik.errors.password}/>\r\n               </Grid>\r\n\r\n\r\n               <Grid container xs = {12} justify = \"center\">\r\n                   <Button type = \"submit\" className = {style.button} size = \"large\" >Login</Button>\r\n                   </Grid>\r\n\r\n                   <Grid container xs = {12} justify = \"center\">\r\n                   <Link href=\"./#/signup\" variant=\"body2\" style = {{\r\n                       paddingTop: \"20px\",\r\n                       color:\"#EDF5E1\",\r\n                       fontSize:\"16px\"\r\n                   }} underline = \"hover\">\r\n            Don't have an account? Sign Up\r\n          </Link>\r\n                   </Grid>\r\n           </Grid>\r\n           </form>\r\n       </Paper>\r\n       </Container>\r\n       </div>)\r\n\r\n}","import React  from \"react\";\r\nimport {Redirect, Route, Switch} from \"react-router-dom\"\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport {Register } from \"./login/register\";\r\nimport {Instructions} from \"./contexts/instructions\";\r\nimport {Login} from \"./login/login\";\r\n\r\n function App(){\r\n\r\n\r\n    return (\r\n      <div style = {{\r\n        height:\"100%\",\r\n        backgroundColor:\"#5cdb95\"\r\n      }}>\r\n        <Switch>\r\n\r\n          {/*Instructions*/}\r\n          <Route component ={Instructions} path = \"/instructions\"/>\r\n          {/*Dashboard*/}\r\n          <Redirect path = \"/\" to = \"/home\" exact/>\r\n          <Redirect push path = \"/home\" to = \"/home/trackproduct\" exact/>\r\n          <PrivateRoute path = \"/home\"/>\r\n\r\n        {/*Auth Route*/}\r\n         <Route component = {Register} path = \"/signup\"/>\r\n         <Route component = {Login} path = \"/login\" />\r\n        </Switch>\r\n        </div>\r\n    );\r\n  }\r\n\r\n  export default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport App from './components/App';\r\nimport {AuthProvider} from \"./components/contexts/authContext\";\r\nimport {BlockProvider} from \"./components/contexts/blockContext\";\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nReactDOM.render( <HashRouter>\r\n<BlockProvider>\r\n<AuthProvider>\r\n<App />\r\n</AuthProvider>\r\n</BlockProvider>\r\n</HashRouter>,\r\n     document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}